ý5
oD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\Repositories\TaxRepository.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3
Repositories3 ?
;? @
public

 
class

 
TaxRepository

 
:

 

Repository

 '
<

' (
Tax

( +
>

+ ,
,

, -
ITaxRepository

. <
{ 
public 

TaxRepository 
( 
EstoqueDbContext )
db* ,
), -
:. /
base0 4
(4 5
db5 7
)7 8
{ 
} 
public 

override 
async 
Task 
< 
IEnumerable *
<* +
Tax+ .
>. /
>/ 0
Find1 5
(5 6

Expression6 @
<@ A
FuncA E
<E F
TaxF I
,I J
boolK O
>O P
>P Q
	predicateR [
)[ \
{ 
return 
await 
DbSet 
. 
AsNoTracking 
( 
) 
. 
Include 
( 
$str 
)  
. 
Where 
( 
	predicate 
) 
. 
ToListAsync 
( 
) 
; 
} 
public 

override 
async 
Task 
< 
IEnumerable *
<* +
Tax+ .
>. /
>/ 0
GetAll1 7
(7 8
)8 9
{ 
return 
await 
DbSet 
. 
Include 
( 
$str 
)  
. 
AsNoTracking 
( 
) 
. 
ToListAsync 
( 
) 
; 
} 
public!! 

override!! 
async!! 
Task!! 
<!! 
Tax!! "
?!!" #
>!!# $
GetById!!% ,
(!!, -
Guid!!- 1
id!!2 4
)!!4 5
{"" 
return## 
await## 
DbSet## 
.$$ 
Include$$ 
($$ 
$str$$ 
)$$  
.%% 
AsNoTracking%% 
(%% 
)%% 
.&& 
Where&& 
(&& 
x&& 
=>&& 
x&& 
.&& 
Id&& 
==&& 
id&&  "
)&&" #
.'' 
FirstOrDefaultAsync''  
(''  !
)''! "
;''" #
}(( 
public** 

override** 
async** 
Task** 
Remove** %
(**% &
Guid**& *
id**+ -
)**- .
{++ 
var,, 
entity,, 
=,, 
await,, 
GetById,, "
(,," #
id,,# %
),,% &
;,,& '
entity-- 
.-- 
	UpdatedAt-- 
=-- 
DateTime-- #
.--# $
UtcNow--$ *
;--* +
entity.. 
... 
	DeletedAt.. 
=.. 
DateTime.. #
...# $
UtcNow..$ *
;..* +
DbSet// 
.// 
Update// 
(// 
entity// 
)// 
;// 
await00 
Db00 
.00 
SaveChangesAsync00 !
(00! "
)00" #
;00# $
}11 
public33 

override33 
async33 
Task33 
<33 

BaseResult33 )
<33) *
Tax33* -
>33- .
>33. /
Search330 6
(336 7

Expression44 
<44 
Func44 
<44 
Tax44 
,44 
bool44 !
>44! "
>44" #
?44# $
	predicate44% .
=44/ 0
null441 5
,445 6
Func55 
<55 

IQueryable55 
<55 
Tax55 
>55 
,55 
IOrderedQueryable55 /
<55/ 0
Tax550 3
>553 4
>554 5
?555 6
orderBy557 >
=55? @
null55A E
,55E F
int66 
pageSize66 
=66 
$num66 
,66 
int66 
page66 #
=66$ %
$num66& '
)66' (
{77 
var88 
query88 
=88 
DbSet88 
.88 
AsQueryable88 %
(88% &
)88& '
;88' (
var:: 
paged:: 
=:: 
PagedResult:: 
.::  
Create::  &
(::& '
page::' +
,::+ ,
pageSize::- 5
,::5 6
query::7 <
.::< =
Count::= B
(::B C
)::C D
)::D E
;::E F
if<< 

(<< 
	predicate<< 
!=<< 
null<< 
)<< 
{== 	
query>> 
=>> 
query>> 
.>> 
Include>> !
(>>! "
$str>>" ,
)>>, -
.?? 
Where?? 
(??  
	predicate??  )
)??) *
;??* +
}@@ 	
queryBB 
=BB 
queryBB 
.BB 
IncludeBB 
(BB 
$strBB (
)BB( )
.CC 
OrderByCC 
(CC 
xCC 
=>CC  "
xCC# $
.CC$ %
IdCC% '
)CC' (
.DD 
SkipDD 
(DD 
pagedDD  
.DD  !
SkipDD! %
(DD% &
)DD& '
)DD' (
.EE 
TakeEE 
(EE 
pageSizeEE #
)EE# $
;EE$ %
ifGG 

(GG 
orderByGG 
!=GG 
nullGG 
)GG 
{HH 	
varII 
dataII 
=II 
awaitII 
orderByII $
(II$ %
queryII% *
)II* +
.II+ ,
ToListAsyncII, 7
(II7 8
)II8 9
;II9 :
returnJJ 
newJJ 

BaseResultJJ !
<JJ! "
TaxJJ" %
>JJ% &
(JJ& '
dataJJ' +
,JJ+ ,
pagedJJ- 2
)JJ2 3
;JJ3 4
}KK 	
returnMM 
newMM 

BaseResultMM 
<MM 
TaxMM !
>MM! "
(MM" #
awaitMM# (
queryMM) .
.MM. /
ToListAsyncMM/ :
(MM: ;
)MM; <
,MM< =
pagedMM> C
)MMC D
;MMD E
}NN 
}OO Ô<
pD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\Repositories\SaleRepository.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3
Repositories3 ?
;? @
public		 
class		 
SaleRepository		 
:		 

Repository		 (
<		( )
Sale		) -
>		- .
,		. /
ISaleRepository		0 ?
{

 
public 

SaleRepository 
( 
EstoqueDbContext *
db+ -
)- .
:/ 0
base1 5
(5 6
db6 8
)8 9
{ 
} 
public 

override 
async 
Task 
< 
IEnumerable *
<* +
Sale+ /
>/ 0
>0 1
Find2 6
(6 7

Expression7 A
<A B
FuncB F
<F G
SaleG K
,K L
boolM Q
>Q R
>R S
	predicateT ]
)] ^
{ 
return 
await 
DbSet 
. 
AsNoTracking 
( 
) 
. 
Include 
( 
$str 
)  
. 
Include 
( 
$str "
)" #
. 
Include 
( 
$str *
)* +
. 
Where 
( 
	predicate 
) 
. 
ToListAsync 
( 
) 
; 
} 
public 

override 
async 
Task 
< 
IEnumerable *
<* +
Sale+ /
>/ 0
>0 1
GetAll2 8
(8 9
)9 :
{ 
return 
await 
DbSet 
. 
Include 
( 
$str  
)  !
. 
Include 
( 
$str #
)# $
. 
Include 
( 
$str +
)+ ,
.   
AsNoTracking   
(   
)   
.!! 
ToListAsync!! 
(!! 
)!! 
;!! 
}"" 
public$$ 

override$$ 
async$$ 
Task$$ 
<$$ 
Sale$$ #
?$$# $
>$$$ %
GetById$$& -
($$- .
Guid$$. 2
id$$3 5
)$$5 6
{%% 
return&& 
await&& 
DbSet&& 
.'' 
Include'' 
('' 
$str'' 
)''  
.(( 
Include(( 
((( 
$str(( "
)((" #
.)) 
Include)) 
()) 
$str)) *
)))* +
.** 
AsNoTracking** 
(** 
)** 
.++ 
Where++ 
(++ 
x++ 
=>++ 
x++ 
.++ 
Id++ 
==++ 
id++  "
)++" #
.,, 
FirstOrDefaultAsync,,  
(,,  !
),,! "
;,," #
}-- 
public// 

override// 
async// 
Task// 
Remove// %
(//% &
Guid//& *
id//+ -
)//- .
{00 
var11 
entity11 
=11 
await11 
GetById11 "
(11" #
id11# %
)11% &
;11& '
entity22 
.22 
	UpdatedAt22 
=22 
DateTime22 #
.22# $
UtcNow22$ *
;22* +
entity33 
.33 
	DeletedAt33 
=33 
DateTime33 #
.33# $
UtcNow33$ *
;33* +
DbSet44 
.44 
Update44 
(44 
entity44 
)44 
;44 
await55 
Db55 
.55 
SaveChangesAsync55 !
(55! "
)55" #
;55# $
}66 
public88 

override88 
async88 
Task88 
<88 

BaseResult88 )
<88) *
Sale88* .
>88. /
>88/ 0
Search881 7
(887 8

Expression99 
<99 
Func99 
<99 
Sale99 
,99 
bool99 "
>99" #
>99# $
?99$ %
	predicate99& /
=990 1
null992 6
,996 7
Func:: 
<:: 

IQueryable:: 
<:: 
Sale:: 
>:: 
,:: 
IOrderedQueryable:: 0
<::0 1
Sale::1 5
>::5 6
>::6 7
?::7 8
orderBy::9 @
=::A B
null::C G
,::G H
int;; 
pageSize;; 
=;; 
$num;; 
,;; 
int;; 
page;; #
=;;$ %
$num;;& '
);;' (
{<< 
var== 
query== 
=== 
DbSet== 
.== 
AsQueryable== %
(==% &
)==& '
;==' (
var?? 
paged?? 
=?? 
PagedResult?? 
.??  
Create??  &
(??& '
page??' +
,??+ ,
pageSize??- 5
,??5 6
query??7 <
.??< =
Count??= B
(??B C
)??C D
)??D E
;??E F
ifAA 

(AA 
	predicateAA 
!=AA 
nullAA 
)AA 
{BB 	
queryCC 
=CC 
queryCC 
.CC 
IncludeCC !
(CC! "
$strCC" ,
)CC, -
.DD 
IncludeDD !
(DD! "
$strDD" /
)DD/ 0
.EE 
IncludeEE !
(EE! "
$strEE" 7
)EE7 8
.FF 
WhereFF 
(FF  
	predicateFF  )
)FF) *
;FF* +
}GG 	
queryII 
=II 
queryII 
.II 
IncludeII 
(II 
$strII (
)II( )
.JJ 
IncludeJJ 
(JJ 
$strJJ +
)JJ+ ,
.KK 
IncludeKK 
(KK 
$strKK 3
)KK3 4
.LL 
OrderByLL 
(LL 
xLL 
=>LL  "
xLL# $
.LL$ %
IdLL% '
)LL' (
.MM 
SkipMM 
(MM 
pagedMM  
.MM  !
SkipMM! %
(MM% &
)MM& '
)MM' (
.NN 
TakeNN 
(NN 
pageSizeNN #
)NN# $
;NN$ %
ifPP 

(PP 
orderByPP 
!=PP 
nullPP 
)PP 
{QQ 	
varRR 
dataRR 
=RR 
awaitRR 
orderByRR $
(RR$ %
queryRR% *
)RR* +
.RR+ ,
ToListAsyncRR, 7
(RR7 8
)RR8 9
;RR9 :
returnSS 
newSS 

BaseResultSS !
<SS! "
SaleSS" &
>SS& '
(SS' (
dataSS( ,
,SS, -
pagedSS. 3
)SS3 4
;SS4 5
}TT 	
returnVV 
newVV 

BaseResultVV 
<VV 
SaleVV "
>VV" #
(VV# $
awaitVV$ )
queryVV* /
.VV/ 0
ToListAsyncVV0 ;
(VV; <
)VV< =
,VV= >
pagedVV? D
)VVD E
;VVE F
}WW 
}XX :
wD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\Repositories\SaleProductRepository.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3
Repositories3 ?
;? @
public

 
class

 !
SaleProductRepository

 "
:

# $

Repository

% /
<

/ 0
SaleProduct

0 ;
>

; <
,

< ="
ISaleProductRepository

> T
{ 
public 
!
SaleProductRepository  
(  !
EstoqueDbContext! 1
db2 4
)4 5
:6 7
base8 <
(< =
db= ?
)? @
{ 
} 
public 

override 
async 
Task 
< 
IEnumerable *
<* +
SaleProduct+ 6
>6 7
>7 8
Find9 =
(= >

Expression> H
<H I
FuncI M
<M N
SaleProductN Y
,Y Z
bool[ _
>_ `
>` a
	predicateb k
)k l
{ 
return 
await 
DbSet 
. 
AsNoTracking 
( 
) 
. 
Include 
( 
$str 
) 
. 
Include 
( 
$str 
) 
. 
Where 
( 
	predicate 
) 
. 
ToListAsync 
( 
) 
; 
} 
public 

override 
async 
Task 
< 
IEnumerable *
<* +
SaleProduct+ 6
>6 7
>7 8
GetAll9 ?
(? @
)@ A
{ 
return 
await 
DbSet 
. 
Include 
( 
$str 
)  
. 
Include 
( 
$str 
) 
. 
AsNoTracking 
( 
) 
.   
ToListAsync   
(   
)   
;   
}!! 
public## 

override## 
async## 
Task## 
<## 
SaleProduct## *
?##* +
>##+ ,
GetById##- 4
(##4 5
Guid##5 9
id##: <
)##< =
{$$ 
return%% 
await%% 
DbSet%% 
.&& 
Include&& 
(&& 
$str&& 
)&& 
.'' 
Include'' 
('' 
$str'' 
)'' 
.(( 
AsNoTracking(( 
((( 
)(( 
.)) 
Where)) 
()) 
x)) 
=>)) 
x)) 
.)) 
Id)) 
==)) 
id))  "
)))" #
.** 
FirstOrDefaultAsync**  
(**  !
)**! "
;**" #
}++ 
public-- 

override-- 
async-- 
Task-- 
Remove-- %
(--% &
Guid--& *
id--+ -
)--- .
{.. 
var// 
entity// 
=// 
await// 
GetById// "
(//" #
id//# %
)//% &
;//& '
entity00 
.00 
	UpdatedAt00 
=00 
DateTime00 #
.00# $
UtcNow00$ *
;00* +
entity11 
.11 
	DeletedAt11 
=11 
DateTime11 #
.11# $
UtcNow11$ *
;11* +
DbSet22 
.22 
Update22 
(22 
entity22 
)22 
;22 
await33 
Db33 
.33 
SaveChangesAsync33 !
(33! "
)33" #
;33# $
}44 
public66 

override66 
async66 
Task66 
<66 

BaseResult66 )
<66) *
SaleProduct66* 5
>665 6
>666 7
Search668 >
(66> ?

Expression77 
<77 
Func77 
<77 
SaleProduct77 #
,77# $
bool77% )
>77) *
>77* +
?77+ ,
	predicate77- 6
=777 8
null779 =
,77= >
Func88 
<88 

IQueryable88 
<88 
SaleProduct88 #
>88# $
,88$ %
IOrderedQueryable88& 7
<887 8
SaleProduct888 C
>88C D
>88D E
?88E F
orderBy88G N
=88O P
null88Q U
,88U V
int99 
pageSize99 
=99 
$num99 
,99 
int99 
page99 #
=99$ %
$num99& '
)99' (
{:: 
var;; 
query;; 
=;; 
DbSet;; 
.;; 
AsQueryable;; %
(;;% &
);;& '
;;;' (
var== 
paged== 
=== 
PagedResult== 
.==  
Create==  &
(==& '
page==' +
,==+ ,
pageSize==- 5
,==5 6
query==7 <
.==< =
Count=== B
(==B C
)==C D
)==D E
;==E F
if?? 

(?? 
	predicate?? 
!=?? 
null?? 
)?? 
{@@ 	
queryAA 
=AA 
queryAA 
.AA 
IncludeAA !
(AA! "
$strAA" +
)AA+ ,
.BB 
IncludeBB !
(BB! "
$strBB" (
)BB( )
.CC 
WhereCC 
(CC  
	predicateCC  )
)CC) *
;CC* +
}DD 	
queryFF 
=FF 
queryFF 
.FF 
IncludeFF 
(FF 
$strFF '
)FF' (
.GG 
IncludeGG 
(GG 
$strGG $
)GG$ %
.HH 
OrderByHH 
(HH 
xHH 
=>HH  "
xHH# $
.HH$ %
IdHH% '
)HH' (
.II 
SkipII 
(II 
pagedII  
.II  !
SkipII! %
(II% &
)II& '
)II' (
.JJ 
TakeJJ 
(JJ 
pageSizeJJ #
)JJ# $
;JJ$ %
ifLL 

(LL 
orderByLL 
!=LL 
nullLL 
)LL 
{MM 	
varNN 
dataNN 
=NN 
awaitNN 
orderByNN $
(NN$ %
queryNN% *
)NN* +
.NN+ ,
ToListAsyncNN, 7
(NN7 8
)NN8 9
;NN9 :
returnOO 
newOO 

BaseResultOO !
<OO! "
SaleProductOO" -
>OO- .
(OO. /
dataOO/ 3
,OO3 4
pagedOO5 :
)OO: ;
;OO; <
}PP 	
returnRR 
newRR 

BaseResultRR 
<RR 
SaleProductRR )
>RR) *
(RR* +
awaitRR+ 0
queryRR1 6
.RR6 7
ToListAsyncRR7 B
(RRB C
)RRC D
,RRD E
pagedRRF K
)RRK L
;RRL M
}SS 
}TT õB
lD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\Repositories\Repository.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3
Repositories3 ?
;? @
public

 
abstract

 
class

 

Repository

  
<

  !
TEntity

! (
>

( )
:

* +
IRepository

, 7
<

7 8
TEntity

8 ?
>

? @
where

A F
TEntity

G N
:

O P
AggregateRoot

Q ^
,

^ _
new

` c
(

c d
)

d e
{ 
	protected 
readonly 
EstoqueDbContext '
Db( *
;* +
	protected 
readonly 
DbSet 
< 
TEntity $
>$ %
DbSet& +
;+ ,
	protected 

Repository 
( 
EstoqueDbContext )
db* ,
), -
{ 
Db 

= 
db 
; 
DbSet 
= 
db 
. 
Set 
< 
TEntity 
> 
(  
)  !
;! "
} 
public 

virtual 
async 
Task 
Add !
(! "
TEntity" )
entity* 0
)0 1
{ 
entity 
. 
	CreatedAt 
= 
DateTime #
.# $
UtcNow$ *
;* +
await 
DbSet 
. 
AddAsync 
( 
entity #
)# $
;$ %
await 
Db 
. 
SaveChangesAsync !
(! "
)" #
;# $
} 
public 

virtual 
async 
Task 
< 

BaseResult (
<( )
TEntity) 0
>0 1
>1 2
Search3 9
(9 :

Expression 
< 
Func 
< 
TEntity 
,  
bool! %
>% &
>& '
?' (
	predicate) 2
=3 4
null5 9
,9 :
Func 
< 

IQueryable 
< 
TEntity 
>  
,  !
IOrderedQueryable" 3
<3 4
TEntity4 ;
>; <
>< =
?= >
orderBy? F
=G H
nullI M
,M N
int   
pageSize   
=   
$num   
,   
int   
page   #
=  $ %
$num  & '
)  ' (
{!! 
var"" 
query"" 
="" 
DbSet"" 
."" 
AsQueryable"" %
(""% &
)""& '
;""' (
var$$ 
paged$$ 
=$$ 
PagedResult$$ 
.$$  
Create$$  &
($$& '
page$$' +
,$$+ ,
pageSize$$- 5
,$$5 6
query$$7 <
.$$< =
Count$$= B
($$B C
)$$C D
)$$D E
;$$E F
if&& 

(&& 
	predicate&& 
!=&& 
null&& 
)&& 
{'' 	
query(( 
=(( 
query(( 
.(( 
Where(( 
(((  
	predicate((  )
)(() *
;((* +
})) 	
query++ 
=++ 
query++ 
.++ 
OrderBy++ 
(++ 
x++ 
=>++  "
x++# $
.++$ %
Id++% '
)++' (
.++( )
Skip++) -
(++- .
paged++. 3
.++3 4
Skip++4 8
(++8 9
)++9 :
)++: ;
.++; <
Take++< @
(++@ A
pageSize++A I
)++I J
;++J K
if-- 

(-- 
orderBy-- 
!=-- 
null-- 
)-- 
{.. 	
var// 
data// 
=// 
await// 
orderBy// $
(//$ %
query//% *
)//* +
.//+ ,
ToListAsync//, 7
(//7 8
)//8 9
;//9 :
return00 
new00 

BaseResult00 !
<00! "
TEntity00" )
>00) *
(00* +
data00+ /
,00/ 0
paged001 6
)006 7
;007 8
}11 	
return33 
new33 

BaseResult33 
<33 
TEntity33 %
>33% &
(33& '
await33' ,
query33- 2
.332 3
ToListAsync333 >
(33> ?
)33? @
,33@ A
paged33B G
)33G H
;33H I
}44 
public66 

virtual66 
async66 
Task66 
<66 
IEnumerable66 )
<66) *
TEntity66* 1
>661 2
>662 3
Find664 8
(668 9

Expression669 C
<66C D
Func66D H
<66H I
TEntity66I P
,66P Q
bool66R V
>66V W
>66W X
	predicate66Y b
)66b c
{77 
return88 
await88 
DbSet88 
.88 
AsNoTracking88 '
(88' (
)88( )
.88) *
Where88* /
(88/ 0
	predicate880 9
)889 :
.88: ;
ToListAsync88; F
(88F G
)88G H
;88H I
}99 
public;; 

virtual;; 
async;; 
Task;; 
<;; 
IEnumerable;; )
<;;) *
TEntity;;* 1
>;;1 2
>;;2 3
GetAll;;4 :
(;;: ;
);;; <
{<< 
return== 
await== 
DbSet== 
.== 
ToListAsync== &
(==& '
)==' (
;==( )
}>> 
public@@ 

virtual@@ 
async@@ 
Task@@ 
<@@ 
TEntity@@ %
?@@% &
>@@& '
GetById@@( /
(@@/ 0
Guid@@0 4
id@@5 7
)@@7 8
{AA 
returnBB 
awaitBB 
DbSetBB 
.BB 
	FindAsyncBB $
(BB$ %
idBB% '
)BB' (
;BB( )
}CC 
publicEE 

virtualEE 
asyncEE 
TaskEE 
UpdateEE $
(EE$ %
TEntityEE% ,
entityEE- 3
)EE3 4
{FF 
entityGG 
.GG 
	CreatedAtGG 
=GG 
DateTimeGG #
.GG# $
UtcNowGG$ *
;GG* +
DbSetHH 
.HH 
UpdateHH 
(HH 
entityHH 
)HH 
;HH 
awaitJJ 
DbJJ 
.JJ 
SaveChangesAsyncJJ !
(JJ! "
)JJ" #
;JJ# $
}KK 
publicMM 

virtualMM 
asyncMM 
TaskMM 
RemoveMM $
(MM$ %
GuidMM% )
idMM* ,
)MM, -
{NN 
varOO 
entityOO 
=OO 
DbSetOO 
.OO 
FindOO 
(OO  
idOO  "
)OO" #
;OO# $
ifQQ 

(QQ 
entityQQ 
!=QQ 
nullQQ 
)QQ 
{RR 	
entitySS 
.SS 
	DeletedAtSS 
=SS 
DateTimeSS '
.SS' (
UtcNowSS( .
;SS. /
awaitTT 
UpdateTT 
(TT 
entityTT 
)TT  
;TT  !
}UU 	
}VV 
publicXX 

virtualXX 
voidXX 
DisposeXX 
(XX  
boolXX  $
	disposingXX% .
)XX. /
{YY 
ifZZ 

(ZZ
 
	disposingZZ 
)ZZ 
Db[[ 
?[[ 
.[[ 
Dispose[[ 
([[ 
)[[ 
;[[ 
}\\ 
public^^ 

virtual^^ 
void^^ 
Dispose^^ 
(^^  
)^^  !
{__ 
Dispose`` 
(`` 
true`` 
)`` 
;`` 
GCaa 

.aa
 
SuppressFinalizeaa 
(aa 
thisaa  
)aa  !
;aa! "
}bb 
}cc Ý9
sD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\Repositories\ProductRepository.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3
Repositories3 ?
;? @
public

 
class

 
ProductRepository

 
:

  

Repository

! +
<

+ ,
Product

, 3
>

3 4
,

4 5
IProductRepository

6 H
{ 
public 

ProductRepository 
( 
EstoqueDbContext -
db. 0
)0 1
:2 3
base4 8
(8 9
db9 ;
); <
{ 
} 
public 

override 
async 
Task 
< 
IEnumerable *
<* +
Product+ 2
>2 3
>3 4
Find5 9
(9 :

Expression: D
<D E
FuncE I
<I J
ProductJ Q
,Q R
boolS W
>W X
>X Y
	predicateZ c
)c d
{ 
return 
await 
DbSet 
. 
AsNoTracking 
( 
) 
. 
Include 
( 
$str 
)  
. 
Include 
( 
$str 
) 
. 
Where 
( 
	predicate 
) 
. 
ToListAsync 
( 
) 
; 
} 
public 

override 
async 
Task 
< 
IEnumerable *
<* +
Product+ 2
>2 3
>3 4
GetAll5 ;
(; <
)< =
{ 
return 
await 
DbSet 
. 
Include 
( 
$str 
)  
. 
Include 
( 
$str 
) 
. 
AsNoTracking 
( 
) 
.   
ToListAsync   
(   
)   
;   
}!! 
public## 

override## 
async## 
Task## 
<## 
Product## &
?##& '
>##' (
GetById##) 0
(##0 1
Guid##1 5
id##6 8
)##8 9
{$$ 
return%% 
await%% 
DbSet%% 
.&& 
Include&& 
(&& 
$str&& 
)&&  
.'' 
Include'' 
('' 
$str'' 
)'' 
.(( 
AsNoTracking(( 
((( 
)(( 
.)) 
Where)) 
()) 
x)) 
=>)) 
x)) 
.)) 
Id)) 
==)) 
id))  "
)))" #
.** 
FirstOrDefaultAsync**  
(**  !
)**! "
;**" #
}++ 
public-- 

override-- 
async-- 
Task-- 
Remove-- %
(--% &
Guid--& *
id--+ -
)--- .
{.. 
var// 
entity// 
=// 
await// 
GetById// "
(//" #
id//# %
)//% &
;//& '
entity00 
.00 
	UpdatedAt00 
=00 
DateTime00 #
.00# $
UtcNow00$ *
;00* +
entity11 
.11 
	DeletedAt11 
=11 
DateTime11 #
.11# $
UtcNow11$ *
;11* +
DbSet22 
.22 
Update22 
(22 
entity22 
)22 
;22 
await33 
Db33 
.33 
SaveChangesAsync33 !
(33! "
)33" #
;33# $
}44 
public66 

override66 
async66 
Task66 
<66 

BaseResult66 )
<66) *
Product66* 1
>661 2
>662 3
Search664 :
(66: ;

Expression77 
<77 
Func77 
<77 
Product77 
,77  
bool77! %
>77% &
>77& '
?77' (
	predicate77) 2
=773 4
null775 9
,779 :
Func88 
<88 

IQueryable88 
<88 
Product88 
>88  
,88  !
IOrderedQueryable88" 3
<883 4
Product884 ;
>88; <
>88< =
?88= >
orderBy88? F
=88G H
null88I M
,88M N
int99 
pageSize99 
=99 
$num99 
,99 
int99 
page99 #
=99$ %
$num99& '
)99' (
{:: 
var;; 
query;; 
=;; 
DbSet;; 
.;; 
AsQueryable;; %
(;;% &
);;& '
;;;' (
var== 
paged== 
=== 
PagedResult== 
.==  
Create==  &
(==& '
page==' +
,==+ ,
pageSize==- 5
,==5 6
query==7 <
.==< =
Count=== B
(==B C
)==C D
)==D E
;==E F
if?? 

(?? 
	predicate?? 
!=?? 
null?? 
)?? 
{@@ 	
queryAA 
=AA 
queryAA 
.AA 
IncludeAA !
(AA! "
$strAA" ,
)AA, -
.BB 
IncludeBB !
(BB! "
$strBB" +
)BB+ ,
.CC 
WhereCC 
(CC  
	predicateCC  )
)CC) *
;CC* +
}DD 	
queryFF 
=FF 
queryFF 
.FF 
IncludeFF 
(FF 
$strFF (
)FF( )
.GG 
IncludeGG 
(GG 
$strGG '
)GG' (
.HH 
OrderByHH 
(HH 
xHH 
=>HH  "
xHH# $
.HH$ %
IdHH% '
)HH' (
.II 
SkipII 
(II 
pagedII  
.II  !
SkipII! %
(II% &
)II& '
)II' (
.JJ 
TakeJJ 
(JJ 
pageSizeJJ #
)JJ# $
;JJ$ %
ifLL 

(LL 
orderByLL 
!=LL 
nullLL 
)LL 
{MM 	
varNN 
dataNN 
=NN 
awaitNN 
orderByNN $
(NN$ %
queryNN% *
)NN* +
.NN+ ,
ToListAsyncNN, 7
(NN7 8
)NN8 9
;NN9 :
returnOO 
newOO 

BaseResultOO !
<OO! "
ProductOO" )
>OO) *
(OO* +
dataOO+ /
,OO/ 0
pagedOO1 6
)OO6 7
;OO7 8
}PP 	
returnRR 
newRR 

BaseResultRR 
<RR 
ProductRR %
>RR% &
(RR& '
awaitRR' ,
queryRR- 2
.RR2 3
ToListAsyncRR3 >
(RR> ?
)RR? @
,RR@ A
pagedRRB G
)RRG H
;RRH I
}SS 
}TT ×6
uD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\Repositories\InventoryRepository.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3
Repositories3 ?
;? @
public

 
class

 
InventoryRepository

  
:

! "

Repository

# -
<

- .
	Inventory

. 7
>

7 8
,

8 9 
IInventoryRepository

: N
{ 
public 

InventoryRepository 
( 
EstoqueDbContext /
db0 2
)2 3
:4 5
base6 :
(: ;
db; =
)= >
{ 
} 
public 

override 
async 
Task 
< 
IEnumerable *
<* +
	Inventory+ 4
>4 5
>5 6
Find7 ;
(; <

Expression< F
<F G
FuncG K
<K L
	InventoryL U
,U V
boolW [
>[ \
>\ ]
	predicate^ g
)g h
{ 
return 
await 
DbSet 
. 
AsNoTracking 
( 
) 
. 
Include 
( 
$str 
) 
. 
Where 
( 
	predicate 
) 
. 
ToListAsync 
( 
) 
; 
} 
public 

override 
async 
Task 
< 
IEnumerable *
<* +
	Inventory+ 4
>4 5
>5 6
GetAll7 =
(= >
)> ?
{ 
return 
await 
DbSet 
. 
Include 
( 
$str 
) 
. 
AsNoTracking 
( 
) 
. 
ToListAsync 
( 
) 
; 
} 
public!! 

override!! 
async!! 
Task!! 
<!! 
	Inventory!! (
?!!( )
>!!) *
GetById!!+ 2
(!!2 3
Guid!!3 7
id!!8 :
)!!: ;
{"" 
return## 
await## 
DbSet## 
.$$ 
Include$$ 
($$ 
$str$$ 
)$$ 
.%% 
AsNoTracking%% 
(%% 
)%% 
.&& 
Where&& 
(&& 
x&& 
=>&& 
x&& 
.&& 
Id&& 
==&& 
id&&  "
)&&" #
.'' 
FirstOrDefaultAsync''  
(''  !
)''! "
;''" #
}(( 
public** 

override** 
async** 
Task** 
Remove** %
(**% &
Guid**& *
id**+ -
)**- .
{++ 
var,, 
entity,, 
=,, 
await,, 
GetById,, "
(,," #
id,,# %
),,% &
;,,& '
entity-- 
.-- 
	UpdatedAt-- 
=-- 
DateTime-- #
.--# $
UtcNow--$ *
;--* +
entity.. 
... 
	DeletedAt.. 
=.. 
DateTime.. #
...# $
UtcNow..$ *
;..* +
DbSet// 
.// 
Update// 
(// 
entity// 
)// 
;// 
await00 
Db00 
.00 
SaveChangesAsync00 !
(00! "
)00" #
;00# $
}11 
public33 

override33 
async33 
Task33 
<33 

BaseResult33 )
<33) *
	Inventory33* 3
>333 4
>334 5
Search336 <
(33< =

Expression44 
<44 
Func44 
<44 
	Inventory44 !
,44! "
bool44# '
>44' (
>44( )
?44) *
	predicate44+ 4
=445 6
null447 ;
,44; <
Func55 
<55 

IQueryable55 
<55 
	Inventory55 !
>55! "
,55" #
IOrderedQueryable55$ 5
<555 6
	Inventory556 ?
>55? @
>55@ A
?55A B
orderBy55C J
=55K L
null55M Q
,55Q R
int66 
pageSize66 
=66 
$num66 
,66 
int66 
page66 #
=66$ %
$num66& '
)66' (
{77 
var88 
query88 
=88 
DbSet88 
.88 
AsQueryable88 %
(88% &
)88& '
;88' (
var:: 
paged:: 
=:: 
PagedResult:: 
.::  
Create::  &
(::& '
page::' +
,::+ ,
pageSize::- 5
,::5 6
query::7 <
.::< =
Count::= B
(::B C
)::C D
)::D E
;::E F
if<< 

(<< 
	predicate<< 
!=<< 
null<< 
)<< 
{== 	
query>> 
=>> 
query>> 
.>> 
Include>> !
(>>! "
$str>>" +
)>>+ ,
.?? 
Where?? 
(??  
	predicate??  )
)??) *
;??* +
}@@ 	
queryBB 
=BB 
queryBB 
.BB 
IncludeBB 
(BB 
$strBB '
)BB' (
.CC 
OrderByCC 
(CC 
xCC 
=>CC  "
xCC# $
.CC$ %
IdCC% '
)CC' (
.DD 
SkipDD 
(DD 
pagedDD  
.DD  !
SkipDD! %
(DD% &
)DD& '
)DD' (
.EE 
TakeEE 
(EE 
pageSizeEE #
)EE# $
;EE$ %
ifGG 

(GG 
orderByGG 
!=GG 
nullGG 
)GG 
{HH 	
varII 
dataII 
=II 
awaitII 
orderByII $
(II$ %
queryII% *
)II* +
.II+ ,
ToListAsyncII, 7
(II7 8
)II8 9
;II9 :
returnJJ 
newJJ 

BaseResultJJ !
<JJ! "
	InventoryJJ" +
>JJ+ ,
(JJ, -
dataJJ- 1
,JJ1 2
pagedJJ3 8
)JJ8 9
;JJ9 :
}KK 	
returnMM 
newMM 

BaseResultMM 
<MM 
	InventoryMM '
>MM' (
(MM( )
awaitMM) .
queryMM/ 4
.MM4 5
ToListAsyncMM5 @
(MM@ A
)MMA B
,MMB C
pagedMMD I
)MMI J
;MMJ K
}NN 
}OO È6
tD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\Repositories\CustomerRepository.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3
Repositories3 ?
;? @
public		 
class		 
CustomerRepository		 
:		  !

Repository		" ,
<		, -
Customer		- 5
>		5 6
,		6 7
ICustomerRepository		8 K
{

 
public 

CustomerRepository 
( 
EstoqueDbContext .
db/ 1
)1 2
:3 4
base5 9
(9 :
db: <
)< =
{ 
} 
public 

override 
async 
Task 
< 
IEnumerable *
<* +
Customer+ 3
>3 4
>4 5
Find6 :
(: ;

Expression; E
<E F
FuncF J
<J K
CustomerK S
,S T
boolU Y
>Y Z
>Z [
	predicate\ e
)e f
{ 
return 
await 
DbSet 
. 
AsNoTracking 
( 
) 
. 
Include 
( 
$str %
)% &
. 
Where 
( 
	predicate 
) 
. 
ToListAsync 
( 
) 
; 
} 
public 

override 
async 
Task 
< 
IEnumerable *
<* +
Customer+ 3
>3 4
>4 5
GetAll6 <
(< =
)= >
{ 
return 
await 
DbSet 
.
 
AsNoTracking 
( 
) 
.
 
Include 
( 
$str $
)$ %
.
 
ToListAsync 
( 
) 
; 
} 
public   

override   
async   
Task   
<   
Customer   '
?  ' (
>  ( )
GetById  * 1
(  1 2
Guid  2 6
id  7 9
)  9 :
{!! 
return"" 
await"" 
DbSet"" 
.## 
AsNoTracking## 
(## 
)## 
.$$ 
Include$$ 
($$ 
$str$$ %
)$$% &
.%% 
Where%% 
(%% 
x%% 
=>%% 
x%% 
.%% 
Id%% 
==%% 
id%% !
)%%! "
.&& 
FirstOrDefaultAsync&& 
(&&  
)&&  !
;&&! "
}'' 
public)) 

override)) 
async)) 
Task)) 
Remove)) %
())% &
Guid))& *
id))+ -
)))- .
{** 
var++ 
entity++ 
=++ 
await++ 
GetById++ "
(++" #
id++# %
)++% &
;++& '
entity,, 
.,, 
	UpdatedAt,, 
=,, 
DateTime,, #
.,,# $
UtcNow,,$ *
;,,* +
entity-- 
.-- 
	DeletedAt-- 
=-- 
DateTime-- #
.--# $
UtcNow--$ *
;--* +
DbSet.. 
... 
Update.. 
(.. 
entity.. 
).. 
;.. 
await// 
Db// 
.// 
SaveChangesAsync// !
(//! "
)//" #
;//# $
}00 
public22 

override22 
async22 
Task22 
<22 

BaseResult22 )
<22) *
Customer22* 2
>222 3
>223 4
Search225 ;
(22; <

Expression33 
<33 
Func33 
<33 
Customer33  
,33  !
bool33" &
>33& '
>33' (
?33( )
	predicate33* 3
=334 5
null336 :
,33: ;
Func44 
<44 

IQueryable44 
<44 
Customer44  
>44  !
,44! "
IOrderedQueryable44# 4
<444 5
Customer445 =
>44= >
>44> ?
?44? @
orderBy44A H
=44I J
null44K O
,44O P
int55 
pageSize55 
=55 
$num55 
,55 
int55 
page55 #
=55$ %
$num55& '
)55' (
{66 
var77 
query77 
=77 
DbSet77 
.77 
AsQueryable77 %
(77% &
)77& '
;77' (
var99 
paged99 
=99 
PagedResult99 
.99  
Create99  &
(99& '
page99' +
,99+ ,
pageSize99- 5
,995 6
query997 <
.99< =
Count99= B
(99B C
)99C D
)99D E
;99E F
if;; 

(;; 
	predicate;; 
!=;; 
null;; 
);; 
{<< 	
query== 
=== 
query== 
.== 
Include== !
(==! "
$str==" 3
)==3 4
.>> 
Where>> 
(>>  
	predicate>>  )
)>>) *
;>>* +
}?? 	
queryAA 
=AA 
queryAA 
.AA 
IncludeAA 
(AA 
$strAA /
)AA/ 0
.BB 
OrderByBB 
(BB 
xBB 
=>BB  "
xBB# $
.BB$ %
IdBB% '
)BB' (
.CC 
SkipCC 
(CC 
pagedCC  
.CC  !
SkipCC! %
(CC% &
)CC& '
)CC' (
.DD 
TakeDD 
(DD 
pageSizeDD #
)DD# $
;DD$ %
ifFF 

(FF 
orderByFF 
!=FF 
nullFF 
)FF 
{GG 	
varHH 
dataHH 
=HH 
awaitHH 
orderByHH $
(HH$ %
queryHH% *
)HH* +
.HH+ ,
ToListAsyncHH, 7
(HH7 8
)HH8 9
;HH9 :
returnII 
newII 

BaseResultII !
<II! "
CustomerII" *
>II* +
(II+ ,
dataII, 0
,II0 1
pagedII2 7
)II7 8
;II8 9
}JJ 	
returnLL 
newLL 

BaseResultLL 
<LL 
CustomerLL &
>LL& '
(LL' (
awaitLL( -
queryLL. 3
.LL3 4
ToListAsyncLL4 ?
(LL? @
)LL@ A
,LLA B
pagedLLC H
)LLH I
;LLI J
}MM 
}NN ¹6
sD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\Repositories\CompanyRepository.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3
Repositories3 ?
;? @
public		 
class		 
CompanyRepository		 
:		  

Repository		! +
<		+ ,
Company		, 3
>		3 4
,		4 5
ICompanyRepository		6 H
{

 
public 

CompanyRepository 
( 
EstoqueDbContext -
db. 0
)0 1
:2 3
base4 8
(8 9
db9 ;
); <
{ 
} 
public 

override 
async 
Task 
< 
IEnumerable *
<* +
Company+ 2
>2 3
>3 4
Find5 9
(9 :

Expression: D
<D E
FuncE I
<I J
CompanyJ Q
,Q R
boolS W
>W X
>X Y
	predicateZ c
)c d
{ 
return 
await 
DbSet 
. 
AsNoTracking 
( 
) 
. 
Include 
( 
$str %
)% &
. 
Where 
( 
	predicate 
) 
. 
ToListAsync 
( 
) 
; 
} 
public 

override 
async 
Task 
< 
IEnumerable *
<* +
Company+ 2
>2 3
>3 4
GetAll5 ;
(; <
)< =
{ 
return 
await 
DbSet 
.
 
AsNoTracking 
( 
) 
.
 
Include 
( 
$str #
)# $
.
 
ToListAsync 
( 
) 
; 
} 
public   

override   
async   
Task   
<   
Company   &
?  & '
>  ' (
GetById  ) 0
(  0 1
Guid  1 5
id  6 8
)  8 9
{!! 
return"" 
await"" 
DbSet"" 
.## 
AsNoTracking## 
(## 
)## 
.$$ 
Include$$ 
($$ 
$str$$ $
)$$$ %
.%% 
Where%% 
(%% 
x%% 
=>%% 
x%% 
.%% 
Id%% 
==%% 
id%% !
)%%! "
.&& 
FirstOrDefaultAsync&& 
(&&  
)&&  !
;&&! "
}'' 
public)) 

override)) 
async)) 
Task)) 
Remove)) %
())% &
Guid))& *
id))+ -
)))- .
{** 
var++ 
entity++ 
=++ 
await++ 
GetById++ "
(++" #
id++# %
)++% &
;++& '
entity,, 
.,, 
	UpdatedAt,, 
=,, 
DateTime,, #
.,,# $
UtcNow,,$ *
;,,* +
entity-- 
.-- 
	DeletedAt-- 
=-- 
DateTime-- #
.--# $
UtcNow--$ *
;--* +
DbSet.. 
... 
Update.. 
(.. 
entity.. 
).. 
;.. 
await// 
Db// 
.// 
SaveChangesAsync// !
(//! "
)//" #
;//# $
}00 
public22 

override22 
async22 
Task22 
<22 

BaseResult22 )
<22) *
Company22* 1
>221 2
>222 3
Search224 :
(22: ;

Expression33 
<33 
Func33 
<33 
Company33 
,33  
bool33! %
>33% &
>33& '
?33' (
	predicate33) 2
=333 4
null335 9
,339 :
Func44 
<44 

IQueryable44 
<44 
Company44 
>44  
,44  !
IOrderedQueryable44" 3
<443 4
Company444 ;
>44; <
>44< =
?44= >
orderBy44? F
=44G H
null44I M
,44M N
int55 
pageSize55 
=55 
$num55 
,55 
int55 
page55 #
=55$ %
$num55& '
)55' (
{66 
var77 
query77 
=77 
DbSet77 
.77 
AsQueryable77 %
(77% &
)77& '
;77' (
var99 
paged99 
=99 
PagedResult99 
.99  
Create99  &
(99& '
page99' +
,99+ ,
pageSize99- 5
,995 6
query997 <
.99< =
Count99= B
(99B C
)99C D
)99D E
;99E F
if;; 

(;; 
	predicate;; 
!=;; 
null;; 
);; 
{<< 	
query== 
=== 
query== 
.== 
Include== !
(==! "
$str==" 2
)==2 3
.>> 
Where>> 
(>>  
	predicate>>  )
)>>) *
;>>* +
}?? 	
queryAA 
=AA 
queryAA 
.AA 
IncludeAA 
(AA 
$strAA .
)AA. /
.BB 
OrderByBB 
(BB 
xBB 
=>BB  "
xBB# $
.BB$ %
IdBB% '
)BB' (
.CC 
SkipCC 
(CC 
pagedCC  
.CC  !
SkipCC! %
(CC% &
)CC& '
)CC' (
.DD 
TakeDD 
(DD 
pageSizeDD #
)DD# $
;DD$ %
ifFF 

(FF 
orderByFF 
!=FF 
nullFF 
)FF 
{GG 	
varHH 
dataHH 
=HH 
awaitHH 
orderByHH $
(HH$ %
queryHH% *
)HH* +
.HH+ ,
ToListAsyncHH, 7
(HH7 8
)HH8 9
;HH9 :
returnII 
newII 

BaseResultII !
<II! "
CompanyII" )
>II) *
(II* +
dataII+ /
,II/ 0
pagedII1 6
)II6 7
;II7 8
}JJ 	
returnLL 
newLL 

BaseResultLL 
<LL 
CompanyLL %
>LL% &
(LL& '
awaitLL' ,
queryLL- 2
.LL2 3
ToListAsyncLL3 >
(LL> ?
)LL? @
,LL@ A
pagedLLB G
)LLG H
;LLH I
}MM 
}NN ¢;
tD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\Repositories\CategoryRepository.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3
Repositories3 ?
;? @
public

 
class

 
CategoryRepository

 
:

  !

Repository

" ,
<

, -
Category

- 5
>

5 6
,

6 7
ICategoryRepository

8 K
{ 
public 

CategoryRepository 
( 
EstoqueDbContext .
db/ 1
)1 2
:3 4
base5 9
(9 :
db: <
)< =
{ 
} 
public 

override 
async 
Task 
< 
Category '
?' (
>( )
GetById* 1
(1 2
Guid2 6
id7 9
)9 :
{ 
return 
await 
DbSet 
. 
AsNoTracking 
( 
) 
. 
Include 
( 
$str 
)  
. 
Include 
( 
$str 
) 
. 
Where 
( 
x 
=> 
x 
. 
Id 
== 
id  "
)" #
. 
FirstOrDefaultAsync  
(  !
)! "
;" #
} 
public 

override 
async 
Task 
Remove %
(% &
Guid& *
id+ -
)- .
{ 
var 
entity 
= 
await 
GetById "
(" #
id# %
)% &
;& '
entity 
. 
	UpdatedAt 
= 
DateTime #
.# $
UtcNow$ *
;* +
entity 
. 
	DeletedAt 
= 
DateTime #
.# $
UtcNow$ *
;* +
DbSet 
. 
Update 
( 
entity 
) 
; 
await   
Db   
.   
SaveChangesAsync   !
(  ! "
)  " #
;  # $
}!! 
public## 

override## 
async## 
Task## 
<## 
IEnumerable## *
<##* +
Category##+ 3
>##3 4
>##4 5
GetAll##6 <
(##< =
)##= >
{$$ 
return%% 
await%% 
DbSet%% 
.&& 
AsNoTracking&& 
(&& 
)&& 
.'' 
Include'' 
('' 
$str'' 
)''  
.(( 
Include(( 
((( 
$str(( 
)(( 
.)) 
Where)) 
()) 
x)) 
=>)) 
x)) 
.)) 
	DeletedAt)) #
==))$ &
null))' +
)))+ ,
.** 
ToListAsync** 
(** 
)** 
;** 
}++ 
public-- 

override-- 
async-- 
Task-- 
<-- 
IEnumerable-- *
<--* +
Category--+ 3
>--3 4
>--4 5
Find--6 :
(--: ;

Expression--; E
<--E F
Func--F J
<--J K
Category--K S
,--S T
bool--U Y
>--Y Z
>--Z [
	predicate--\ e
)--e f
{.. 
return// 
await// 
DbSet// 
.00 
AsNoTracking00 
(00 
)00 
.11 
Include11 
(11 
$str11 
)11  
.22 
Include22 
(22 
$str22 
)22 
.33 
Where33 
(33 
	predicate33 
)33 
.44 
ToListAsync44 
(44 
)44 
;44 
}55 
public77 

override77 
async77 
Task77 
<77 

BaseResult77 )
<77) *
Category77* 2
>772 3
>773 4
Search775 ;
(77; <

Expression88 
<88 
Func88 
<88 
Category88  
,88  !
bool88" &
>88& '
>88' (
?88( )
	predicate88* 3
=884 5
null886 :
,88: ;
Func99 
<99 

IQueryable99 
<99 
Category99  
>99  !
,99! "
IOrderedQueryable99# 4
<994 5
Category995 =
>99= >
>99> ?
?99? @
orderBy99A H
=99I J
null99K O
,99O P
int:: 
pageSize:: 
=:: 
$num:: 
,:: 
int:: 
page:: #
=::$ %
$num::& '
)::' (
{;; 
var<< 
query<< 
=<< 
DbSet<< 
.<< 
AsQueryable<< %
(<<% &
)<<& '
;<<' (
var>> 
paged>> 
=>> 
PagedResult>> 
.>>  
Create>>  &
(>>& '
page>>' +
,>>+ ,
pageSize>>- 5
,>>5 6
query>>7 <
.>>< =
Count>>= B
(>>B C
)>>C D
)>>D E
;>>E F
if@@ 

(@@ 
	predicate@@ 
!=@@ 
null@@ 
)@@ 
{AA 	
queryBB 
=BB 
queryBB 
.BB 
IncludeBB !
(BB! "
$strBB" ,
)BB, -
.CC 
IncludeCC !
(CC! "
$strCC" (
)CC( )
.DD 
WhereDD 
(DD  
	predicateDD  )
)DD) *
;DD* +
}EE 	
queryGG 
=GG 
queryGG 
.GG 
IncludeGG 
(GG 
$strGG (
)GG( )
.HH 
IncludeHH 
(HH 
$strHH $
)HH$ %
.II 
OrderByII 
(II 
xII 
=>II  "
xII# $
.II$ %
IdII% '
)II' (
.JJ 
SkipJJ 
(JJ 
pagedJJ  
.JJ  !
SkipJJ! %
(JJ% &
)JJ& '
)JJ' (
.KK 
TakeKK 
(KK 
pageSizeKK #
)KK# $
;KK$ %
ifMM 

(MM 
orderByMM 
!=MM 
nullMM 
)MM 
{NN 	
varOO 
dataOO 
=OO 
awaitOO 
orderByOO $
(OO$ %
queryOO% *
)OO* +
.OO+ ,
ToListAsyncOO, 7
(OO7 8
)OO8 9
;OO9 :
returnPP 
newPP 

BaseResultPP !
<PP! "
CategoryPP" *
>PP* +
(PP+ ,
dataPP, 0
,PP0 1
pagedPP2 7
)PP7 8
;PP8 9
}QQ 	
returnSS 
newSS 

BaseResultSS 
<SS 
CategorySS &
>SS& '
(SS' (
awaitSS( -
querySS. 3
.SS3 4
ToListAsyncSS4 ?
(SS? @
)SS@ A
,SSA B
pagedSSC H
)SSH I
;SSI J
}TT 
}UU Ö¢
sD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\migrations\20240119010759_init.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3

migrations3 =
{ 
public 

partial 
class 
init 
: 
	Migration  )
{		 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
EnsureSchema )
() *
name 
: 
$str 
) 
;  
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str "
," #
schema 
: 
$str  
,  !
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 8
,8 9
nullable: B
:B C
falseD I
)I J
,J K
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 C
,C D
nullableE M
:M N
falseO T
)T U
,U V
Description 
=  !
table" '
.' (
Column( .
<. /
string/ 5
>5 6
(6 7
type7 ;
:; <
$str= L
,L M
nullableN V
:V W
falseX ]
)] ^
,^ _
ShortDescription $
=% &
table' ,
., -
Column- 3
<3 4
string4 :
>: ;
(; <
type< @
:@ A
$strB P
,P Q
nullableR Z
:Z [
false\ a
)a b
,b c
	CreatedAt 
= 
table  %
.% &
Column& ,
<, -
DateTime- 5
>5 6
(6 7
type7 ;
:; <
$str= Z
,Z [
nullable\ d
:d e
falsef k
)k l
,l m
	UpdatedAt 
= 
table  %
.% &
Column& ,
<, -
DateTime- 5
>5 6
(6 7
type7 ;
:; <
$str= Z
,Z [
nullable\ d
:d e
truef j
)j k
,k l
	DeletedAt 
= 
table  %
.% &
Column& ,
<, -
DateTime- 5
>5 6
(6 7
type7 ;
:; <
$str= Z
,Z [
nullable\ d
:d e
truef j
)j k
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 4
,4 5
x6 7
=>8 :
x; <
.< =
Id= ?
)? @
;@ A
}   
)   
;   
migrationBuilder"" 
."" 
CreateTable"" (
(""( )
name## 
:## 
$str## &
,##& '
schema$$ 
:$$ 
$str$$  
,$$  !
columns%% 
:%% 
table%% 
=>%% !
new%%" %
{&& 
Id'' 
='' 
table'' 
.'' 
Column'' %
<''% &
Guid''& *
>''* +
(''+ ,
type'', 0
:''0 1
$str''2 8
,''8 9
nullable'': B
:''B C
false''D I
)''I J
,''J K
	CreatedAt(( 
=(( 
table((  %
.((% &
Column((& ,
<((, -
DateTime((- 5
>((5 6
(((6 7
type((7 ;
:((; <
$str((= Z
,((Z [
nullable((\ d
:((d e
false((f k
)((k l
,((l m
	UpdatedAt)) 
=)) 
table))  %
.))% &
Column))& ,
<)), -
DateTime))- 5
>))5 6
())6 7
type))7 ;
:)); <
$str))= Z
,))Z [
nullable))\ d
:))d e
true))f j
)))j k
,))k l
	DeletedAt** 
=** 
table**  %
.**% &
Column**& ,
<**, -
DateTime**- 5
>**5 6
(**6 7
type**7 ;
:**; <
$str**= Z
,**Z [
nullable**\ d
:**d e
true**f j
)**j k
,**k l
Street++ 
=++ 
table++ "
.++" #
Column++# )
<++) *
string++* 0
>++0 1
(++1 2
type++2 6
:++6 7
$str++8 E
,++E F
nullable++G O
:++O P
false++Q V
)++V W
,++W X
Number,, 
=,, 
table,, "
.,," #
Column,,# )
<,,) *
string,,* 0
>,,0 1
(,,1 2
type,,2 6
:,,6 7
$str,,8 E
,,,E F
nullable,,G O
:,,O P
false,,Q V
),,V W
,,,W X

Complement-- 
=--  
table--! &
.--& '
Column--' -
<--- .
string--. 4
>--4 5
(--5 6
type--6 :
:--: ;
$str--< I
,--I J
nullable--K S
:--S T
false--U Z
)--Z [
,--[ \
Neighborhood..  
=..! "
table..# (
...( )
Column..) /
<../ 0
string..0 6
>..6 7
(..7 8
type..8 <
:..< =
$str..> K
,..K L
nullable..M U
:..U V
false..W \
)..\ ]
,..] ^
District// 
=// 
table// $
.//$ %
Column//% +
<//+ ,
string//, 2
>//2 3
(//3 4
type//4 8
://8 9
$str//: G
,//G H
nullable//I Q
://Q R
false//S X
)//X Y
,//Y Z
City00 
=00 
table00  
.00  !
Column00! '
<00' (
string00( .
>00. /
(00/ 0
type000 4
:004 5
$str006 C
,00C D
nullable00E M
:00M N
false00O T
)00T U
,00U V
County11 
=11 
table11 "
.11" #
Column11# )
<11) *
string11* 0
>110 1
(111 2
type112 6
:116 7
$str118 E
,11E F
nullable11G O
:11O P
false11Q V
)11V W
,11W X
ZipCode22 
=22 
table22 #
.22# $
Column22$ *
<22* +
string22+ 1
>221 2
(222 3
type223 7
:227 8
$str229 F
,22F G
nullable22H P
:22P Q
false22R W
)22W X
,22X Y
Latitude33 
=33 
table33 $
.33$ %
Column33% +
<33+ ,
string33, 2
>332 3
(333 4
type334 8
:338 9
$str33: G
,33G H
nullable33I Q
:33Q R
false33S X
)33X Y
,33Y Z
	Longitude44 
=44 
table44  %
.44% &
Column44& ,
<44, -
string44- 3
>443 4
(444 5
type445 9
:449 :
$str44; H
,44H I
nullable44J R
:44R S
false44T Y
)44Y Z
}55 
,55 
constraints66 
:66 
table66 "
=>66# %
{77 
table88 
.88 

PrimaryKey88 $
(88$ %
$str88% 8
,888 9
x88: ;
=>88< >
x88? @
.88@ A
Id88A C
)88C D
;88D E
}99 
)99 
;99 
migrationBuilder;; 
.;; 
CreateTable;; (
(;;( )
name<< 
:<< 
$str<< '
,<<' (
schema== 
:== 
$str==  
,==  !
columns>> 
:>> 
table>> 
=>>> !
new>>" %
{?? 
Id@@ 
=@@ 
table@@ 
.@@ 
Column@@ %
<@@% &
Guid@@& *
>@@* +
(@@+ ,
type@@, 0
:@@0 1
$str@@2 8
,@@8 9
nullable@@: B
:@@B C
false@@D I
)@@I J
,@@J K
	CreatedAtAA 
=AA 
tableAA  %
.AA% &
ColumnAA& ,
<AA, -
DateTimeAA- 5
>AA5 6
(AA6 7
typeAA7 ;
:AA; <
$strAA= Z
,AAZ [
nullableAA\ d
:AAd e
falseAAf k
)AAk l
,AAl m
	UpdatedAtBB 
=BB 
tableBB  %
.BB% &
ColumnBB& ,
<BB, -
DateTimeBB- 5
>BB5 6
(BB6 7
typeBB7 ;
:BB; <
$strBB= Z
,BBZ [
nullableBB\ d
:BBd e
trueBBf j
)BBj k
,BBk l
	DeletedAtCC 
=CC 
tableCC  %
.CC% &
ColumnCC& ,
<CC, -
DateTimeCC- 5
>CC5 6
(CC6 7
typeCC7 ;
:CC; <
$strCC= Z
,CCZ [
nullableCC\ d
:CCd e
trueCCf j
)CCj k
,CCk l
StreetDD 
=DD 
tableDD "
.DD" #
ColumnDD# )
<DD) *
stringDD* 0
>DD0 1
(DD1 2
typeDD2 6
:DD6 7
$strDD8 E
,DDE F
nullableDDG O
:DDO P
falseDDQ V
)DDV W
,DDW X
NumberEE 
=EE 
tableEE "
.EE" #
ColumnEE# )
<EE) *
stringEE* 0
>EE0 1
(EE1 2
typeEE2 6
:EE6 7
$strEE8 E
,EEE F
nullableEEG O
:EEO P
falseEEQ V
)EEV W
,EEW X

ComplementFF 
=FF  
tableFF! &
.FF& '
ColumnFF' -
<FF- .
stringFF. 4
>FF4 5
(FF5 6
typeFF6 :
:FF: ;
$strFF< I
,FFI J
nullableFFK S
:FFS T
falseFFU Z
)FFZ [
,FF[ \
NeighborhoodGG  
=GG! "
tableGG# (
.GG( )
ColumnGG) /
<GG/ 0
stringGG0 6
>GG6 7
(GG7 8
typeGG8 <
:GG< =
$strGG> K
,GGK L
nullableGGM U
:GGU V
falseGGW \
)GG\ ]
,GG] ^
DistrictHH 
=HH 
tableHH $
.HH$ %
ColumnHH% +
<HH+ ,
stringHH, 2
>HH2 3
(HH3 4
typeHH4 8
:HH8 9
$strHH: G
,HHG H
nullableHHI Q
:HHQ R
falseHHS X
)HHX Y
,HHY Z
CityII 
=II 
tableII  
.II  !
ColumnII! '
<II' (
stringII( .
>II. /
(II/ 0
typeII0 4
:II4 5
$strII6 C
,IIC D
nullableIIE M
:IIM N
falseIIO T
)IIT U
,IIU V
CountyJJ 
=JJ 
tableJJ "
.JJ" #
ColumnJJ# )
<JJ) *
stringJJ* 0
>JJ0 1
(JJ1 2
typeJJ2 6
:JJ6 7
$strJJ8 E
,JJE F
nullableJJG O
:JJO P
falseJJQ V
)JJV W
,JJW X
ZipCodeKK 
=KK 
tableKK #
.KK# $
ColumnKK$ *
<KK* +
stringKK+ 1
>KK1 2
(KK2 3
typeKK3 7
:KK7 8
$strKK9 F
,KKF G
nullableKKH P
:KKP Q
falseKKR W
)KKW X
,KKX Y
LatitudeLL 
=LL 
tableLL $
.LL$ %
ColumnLL% +
<LL+ ,
stringLL, 2
>LL2 3
(LL3 4
typeLL4 8
:LL8 9
$strLL: G
,LLG H
nullableLLI Q
:LLQ R
falseLLS X
)LLX Y
,LLY Z
	LongitudeMM 
=MM 
tableMM  %
.MM% &
ColumnMM& ,
<MM, -
stringMM- 3
>MM3 4
(MM4 5
typeMM5 9
:MM9 :
$strMM; H
,MMH I
nullableMMJ R
:MMR S
falseMMT Y
)MMY Z
}NN 
,NN 
constraintsOO 
:OO 
tableOO "
=>OO# %
{PP 
tableQQ 
.QQ 

PrimaryKeyQQ $
(QQ$ %
$strQQ% 9
,QQ9 :
xQQ; <
=>QQ= ?
xQQ@ A
.QQA B
IdQQB D
)QQD E
;QQE F
}RR 
)RR 
;RR 
migrationBuilderTT 
.TT 
CreateTableTT (
(TT( )
nameUU 
:UU 
$strUU 
,UU 
schemaVV 
:VV 
$strVV  
,VV  !
columnsWW 
:WW 
tableWW 
=>WW !
newWW" %
{XX 
IdYY 
=YY 
tableYY 
.YY 
ColumnYY %
<YY% &
GuidYY& *
>YY* +
(YY+ ,
typeYY, 0
:YY0 1
$strYY2 8
,YY8 9
nullableYY: B
:YYB C
falseYYD I
)YYI J
,YYJ K
NameZZ 
=ZZ 
tableZZ  
.ZZ  !
ColumnZZ! '
<ZZ' (
stringZZ( .
>ZZ. /
(ZZ/ 0
typeZZ0 4
:ZZ4 5
$strZZ6 C
,ZZC D
nullableZZE M
:ZZM N
falseZZO T
)ZZT U
,ZZU V
Description[[ 
=[[  !
table[[" '
.[[' (
Column[[( .
<[[. /
string[[/ 5
>[[5 6
([[6 7
type[[7 ;
:[[; <
$str[[= K
,[[K L
nullable[[M U
:[[U V
false[[W \
)[[\ ]
,[[] ^

Percentage\\ 
=\\  
table\\! &
.\\& '
Column\\' -
<\\- .
decimal\\. 5
>\\5 6
(\\6 7
type\\7 ;
:\\; <
$str\\= F
,\\F G
nullable\\H P
:\\P Q
false\\R W
)\\W X
,\\X Y

IdCategory]] 
=]]  
table]]! &
.]]& '
Column]]' -
<]]- .
Guid]]. 2
>]]2 3
(]]3 4
type]]4 8
:]]8 9
$str]]: @
,]]@ A
nullable]]B J
:]]J K
false]]L Q
)]]Q R
,]]R S
	CreatedAt^^ 
=^^ 
table^^  %
.^^% &
Column^^& ,
<^^, -
DateTime^^- 5
>^^5 6
(^^6 7
type^^7 ;
:^^; <
$str^^= Z
,^^Z [
nullable^^\ d
:^^d e
false^^f k
)^^k l
,^^l m
	UpdatedAt__ 
=__ 
table__  %
.__% &
Column__& ,
<__, -
DateTime__- 5
>__5 6
(__6 7
type__7 ;
:__; <
$str__= Z
,__Z [
nullable__\ d
:__d e
true__f j
)__j k
,__k l
	DeletedAt`` 
=`` 
table``  %
.``% &
Column``& ,
<``, -
DateTime``- 5
>``5 6
(``6 7
type``7 ;
:``; <
$str``= Z
,``Z [
nullable``\ d
:``d e
true``f j
)``j k
}aa 
,aa 
constraintsbb 
:bb 
tablebb "
=>bb# %
{cc 
tabledd 
.dd 

PrimaryKeydd $
(dd$ %
$strdd% .
,dd. /
xdd0 1
=>dd2 4
xdd5 6
.dd6 7
Iddd7 9
)dd9 :
;dd: ;
tableee 
.ee 

ForeignKeyee $
(ee$ %
nameff 
:ff 
$strff =
,ff= >
columngg 
:gg 
xgg  !
=>gg" $
xgg% &
.gg& '

IdCategorygg' 1
,gg1 2
principalSchemahh '
:hh' (
$strhh) 1
,hh1 2
principalTableii &
:ii& '
$strii( 4
,ii4 5
principalColumnjj '
:jj' (
$strjj) -
)jj- .
;jj. /
}kk 
)kk 
;kk 
migrationBuildermm 
.mm 
CreateTablemm (
(mm( )
namenn 
:nn 
$strnn !
,nn! "
schemaoo 
:oo 
$stroo  
,oo  !
columnspp 
:pp 
tablepp 
=>pp !
newpp" %
{qq 
Idrr 
=rr 
tablerr 
.rr 
Columnrr %
<rr% &
Guidrr& *
>rr* +
(rr+ ,
typerr, 0
:rr0 1
$strrr2 8
,rr8 9
nullablerr: B
:rrB C
falserrD I
)rrI J
,rrJ K
Namess 
=ss 
tabless  
.ss  !
Columnss! '
<ss' (
stringss( .
>ss. /
(ss/ 0
typess0 4
:ss4 5
$strss6 C
,ssC D
nullablessE M
:ssM N
falsessO T
)ssT U
,ssU V
DocIdtt 
=tt 
tablett !
.tt! "
Columntt" (
<tt( )
stringtt) /
>tt/ 0
(tt0 1
typett1 5
:tt5 6
$strtt7 D
,ttD E
nullablettF N
:ttN O
falsettP U
)ttU V
,ttV W
Emailuu 
=uu 
tableuu !
.uu! "
Columnuu" (
<uu( )
stringuu) /
>uu/ 0
(uu0 1
typeuu1 5
:uu5 6
$struu7 E
,uuE F
nullableuuG O
:uuO P
falseuuQ V
)uuV W
,uuW X
Descriptionvv 
=vv  !
tablevv" '
.vv' (
Columnvv( .
<vv. /
stringvv/ 5
>vv5 6
(vv6 7
typevv7 ;
:vv; <
$strvv= K
,vvK L
nullablevvM U
:vvU V
falsevvW \
)vv\ ]
,vv] ^
PhoneNumberww 
=ww  !
tableww" '
.ww' (
Columnww( .
<ww. /
stringww/ 5
>ww5 6
(ww6 7
typeww7 ;
:ww; <
$strww= J
,wwJ K
nullablewwL T
:wwT U
falsewwV [
)ww[ \
,ww\ ]
IdCompanyAddressxx $
=xx% &
tablexx' ,
.xx, -
Columnxx- 3
<xx3 4
Guidxx4 8
>xx8 9
(xx9 :
typexx: >
:xx> ?
$strxx@ F
,xxF G
nullablexxH P
:xxP Q
falsexxR W
)xxW X
,xxX Y
	CreatedAtyy 
=yy 
tableyy  %
.yy% &
Columnyy& ,
<yy, -
DateTimeyy- 5
>yy5 6
(yy6 7
typeyy7 ;
:yy; <
$stryy= Z
,yyZ [
nullableyy\ d
:yyd e
falseyyf k
)yyk l
,yyl m
	UpdatedAtzz 
=zz 
tablezz  %
.zz% &
Columnzz& ,
<zz, -
DateTimezz- 5
>zz5 6
(zz6 7
typezz7 ;
:zz; <
$strzz= Z
,zzZ [
nullablezz\ d
:zzd e
truezzf j
)zzj k
,zzk l
	DeletedAt{{ 
={{ 
table{{  %
.{{% &
Column{{& ,
<{{, -
DateTime{{- 5
>{{5 6
({{6 7
type{{7 ;
:{{; <
$str{{= Z
,{{Z [
nullable{{\ d
:{{d e
true{{f j
){{j k
}|| 
,|| 
constraints}} 
:}} 
table}} "
=>}}# %
{~~ 
table 
. 

PrimaryKey $
($ %
$str% 3
,3 4
x5 6
=>7 9
x: ;
.; <
Id< >
)> ?
;? @
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 L
,
L M
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
IdCompanyAddress
' 7
,
7 8
principalSchema
 '
:
' (
$str
) 1
,
1 2
principalTable
 &
:
& '
$str
( 8
,
8 9
principalColumn
 '
:
' (
$str
) -
)
- .
;
. /
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 !
,
! "
schema
 
:
 
$str
  
,
  !
columns
 
:
 
table
 
=>
 !
new
" %
{
 
Id
 
=
 
table
 
.
 
Column
 %
<
% &
Guid
& *
>
* +
(
+ ,
type
, 0
:
0 1
$str
2 8
,
8 9
nullable
: B
:
B C
false
D I
)
I J
,
J K
Name
 
=
 
table
  
.
  !
Column
! '
<
' (
string
( .
>
. /
(
/ 0
type
0 4
:
4 5
$str
6 C
,
C D
nullable
E M
:
M N
false
O T
)
T U
,
U V
DocId
 
=
 
table
 !
.
! "
Column
" (
<
( )
string
) /
>
/ 0
(
0 1
type
1 5
:
5 6
$str
7 D
,
D E
nullable
F N
:
N O
false
P U
)
U V
,
V W
Email
 
=
 
table
 !
.
! "
Column
" (
<
( )
string
) /
>
/ 0
(
0 1
type
1 5
:
5 6
$str
7 D
,
D E
nullable
F N
:
N O
false
P U
)
U V
,
V W
Description
 
=
  !
table
" '
.
' (
Column
( .
<
. /
string
/ 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= K
,
K L
nullable
M U
:
U V
false
W \
)
\ ]
,
] ^
PhoneNumber
 
=
  !
table
" '
.
' (
Column
( .
<
. /
string
/ 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= J
,
J K
nullable
L T
:
T U
false
V [
)
[ \
,
\ ]
IdCustomerAddress
 %
=
& '
table
( -
.
- .
Column
. 4
<
4 5
Guid
5 9
>
9 :
(
: ;
type
; ?
:
? @
$str
A G
,
G H
nullable
I Q
:
Q R
false
S X
)
X Y
,
Y Z
	CreatedAt
 
=
 
table
  %
.
% &
Column
& ,
<
, -
DateTime
- 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= Z
,
Z [
nullable
\ d
:
d e
false
f k
)
k l
,
l m
	UpdatedAt
 
=
 
table
  %
.
% &
Column
& ,
<
, -
DateTime
- 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= Z
,
Z [
nullable
\ d
:
d e
true
f j
)
j k
,
k l
	DeletedAt
 
=
 
table
  %
.
% &
Column
& ,
<
, -
DateTime
- 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= Z
,
Z [
nullable
\ d
:
d e
true
f j
)
j k
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 3
,
3 4
x
5 6
=>
7 9
x
: ;
.
; <
Id
< >
)
> ?
;
? @
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 N
,
N O
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
IdCustomerAddress
' 8
,
8 9
principalSchema
 '
:
' (
$str
) 1
,
1 2
principalTable
 &
:
& '
$str
( 9
,
9 :
principalColumn
   '
:
  ' (
$str
  ) -
)
  - .
;
  . /
}
¡¡ 
)
¡¡ 
;
¡¡ 
migrationBuilder
££ 
.
££ 
CreateTable
££ (
(
££( )
name
¤¤ 
:
¤¤ 
$str
¤¤  
,
¤¤  !
schema
¥¥ 
:
¥¥ 
$str
¥¥  
,
¥¥  !
columns
¦¦ 
:
¦¦ 
table
¦¦ 
=>
¦¦ !
new
¦¦" %
{
§§ 
Id
¨¨ 
=
¨¨ 
table
¨¨ 
.
¨¨ 
Column
¨¨ %
<
¨¨% &
Guid
¨¨& *
>
¨¨* +
(
¨¨+ ,
type
¨¨, 0
:
¨¨0 1
$str
¨¨2 8
,
¨¨8 9
nullable
¨¨: B
:
¨¨B C
false
¨¨D I
)
¨¨I J
,
¨¨J K
Name
©© 
=
©© 
table
©©  
.
©©  !
Column
©©! '
<
©©' (
string
©©( .
>
©©. /
(
©©/ 0
type
©©0 4
:
©©4 5
$str
©©6 <
,
©©< =
nullable
©©> F
:
©©F G
false
©©H M
)
©©M N
,
©©N O
Description
ªª 
=
ªª  !
table
ªª" '
.
ªª' (
Column
ªª( .
<
ªª. /
string
ªª/ 5
>
ªª5 6
(
ªª6 7
type
ªª7 ;
:
ªª; <
$str
ªª= K
,
ªªK L
nullable
ªªM U
:
ªªU V
false
ªªW \
)
ªª\ ]
,
ªª] ^
ShortDescription
«« $
=
««% &
table
««' ,
.
««, -
Column
««- 3
<
««3 4
string
««4 :
>
««: ;
(
««; <
type
««< @
:
««@ A
$str
««B P
,
««P Q
nullable
««R Z
:
««Z [
false
««\ a
)
««a b
,
««b c
Price
¬¬ 
=
¬¬ 
table
¬¬ !
.
¬¬! "
Column
¬¬" (
<
¬¬( )
decimal
¬¬) 0
>
¬¬0 1
(
¬¬1 2
type
¬¬2 6
:
¬¬6 7
$str
¬¬8 A
,
¬¬A B
nullable
¬¬C K
:
¬¬K L
false
¬¬M R
)
¬¬R S
,
¬¬S T
Weight
­­ 
=
­­ 
table
­­ "
.
­­" #
Column
­­# )
<
­­) *
decimal
­­* 1
>
­­1 2
(
­­2 3
type
­­3 7
:
­­7 8
$str
­­9 B
,
­­B C
nullable
­­D L
:
­­L M
false
­­N S
)
­­S T
,
­­T U
Height
®® 
=
®® 
table
®® "
.
®®" #
Column
®®# )
<
®®) *
decimal
®®* 1
>
®®1 2
(
®®2 3
type
®®3 7
:
®®7 8
$str
®®9 B
,
®®B C
nullable
®®D L
:
®®L M
false
®®N S
)
®®S T
,
®®T U
Length
¯¯ 
=
¯¯ 
table
¯¯ "
.
¯¯" #
Column
¯¯# )
<
¯¯) *
decimal
¯¯* 1
>
¯¯1 2
(
¯¯2 3
type
¯¯3 7
:
¯¯7 8
$str
¯¯9 B
,
¯¯B C
nullable
¯¯D L
:
¯¯L M
false
¯¯N S
)
¯¯S T
,
¯¯T U
Image
°° 
=
°° 
table
°° !
.
°°! "
Column
°°" (
<
°°( )
string
°°) /
>
°°/ 0
(
°°0 1
type
°°1 5
:
°°5 6
$str
°°7 F
,
°°F G
nullable
°°H P
:
°°P Q
false
°°R W
)
°°W X
,
°°X Y

IdCategory
±± 
=
±±  
table
±±! &
.
±±& '
Column
±±' -
<
±±- .
Guid
±±. 2
>
±±2 3
(
±±3 4
type
±±4 8
:
±±8 9
$str
±±: @
,
±±@ A
nullable
±±B J
:
±±J K
false
±±L Q
)
±±Q R
,
±±R S
	IdCompany
²² 
=
²² 
table
²²  %
.
²²% &
Column
²²& ,
<
²², -
Guid
²²- 1
>
²²1 2
(
²²2 3
type
²²3 7
:
²²7 8
$str
²²9 ?
,
²²? @
nullable
²²A I
:
²²I J
false
²²K P
)
²²P Q
,
²²Q R
	CreatedAt
³³ 
=
³³ 
table
³³  %
.
³³% &
Column
³³& ,
<
³³, -
DateTime
³³- 5
>
³³5 6
(
³³6 7
type
³³7 ;
:
³³; <
$str
³³= Z
,
³³Z [
nullable
³³\ d
:
³³d e
false
³³f k
)
³³k l
,
³³l m
	UpdatedAt
´´ 
=
´´ 
table
´´  %
.
´´% &
Column
´´& ,
<
´´, -
DateTime
´´- 5
>
´´5 6
(
´´6 7
type
´´7 ;
:
´´; <
$str
´´= Z
,
´´Z [
nullable
´´\ d
:
´´d e
true
´´f j
)
´´j k
,
´´k l
	DeletedAt
µµ 
=
µµ 
table
µµ  %
.
µµ% &
Column
µµ& ,
<
µµ, -
DateTime
µµ- 5
>
µµ5 6
(
µµ6 7
type
µµ7 ;
:
µµ; <
$str
µµ= Z
,
µµZ [
nullable
µµ\ d
:
µµd e
true
µµf j
)
µµj k
}
¶¶ 
,
¶¶ 
constraints
·· 
:
·· 
table
·· "
=>
··# %
{
¸¸ 
table
¹¹ 
.
¹¹ 

PrimaryKey
¹¹ $
(
¹¹$ %
$str
¹¹% 2
,
¹¹2 3
x
¹¹4 5
=>
¹¹6 8
x
¹¹9 :
.
¹¹: ;
Id
¹¹; =
)
¹¹= >
;
¹¹> ?
table
ºº 
.
ºº 

ForeignKey
ºº $
(
ºº$ %
name
»» 
:
»» 
$str
»» A
,
»»A B
column
¼¼ 
:
¼¼ 
x
¼¼  !
=>
¼¼" $
x
¼¼% &
.
¼¼& '

IdCategory
¼¼' 1
,
¼¼1 2
principalSchema
½½ '
:
½½' (
$str
½½) 1
,
½½1 2
principalTable
¾¾ &
:
¾¾& '
$str
¾¾( 4
,
¾¾4 5
principalColumn
¿¿ '
:
¿¿' (
$str
¿¿) -
)
¿¿- .
;
¿¿. /
table
ÀÀ 
.
ÀÀ 

ForeignKey
ÀÀ $
(
ÀÀ$ %
name
ÁÁ 
:
ÁÁ 
$str
ÁÁ ?
,
ÁÁ? @
column
ÂÂ 
:
ÂÂ 
x
ÂÂ  !
=>
ÂÂ" $
x
ÂÂ% &
.
ÂÂ& '
	IdCompany
ÂÂ' 0
,
ÂÂ0 1
principalSchema
ÃÃ '
:
ÃÃ' (
$str
ÃÃ) 1
,
ÃÃ1 2
principalTable
ÄÄ &
:
ÄÄ& '
$str
ÄÄ( 3
,
ÄÄ3 4
principalColumn
ÅÅ '
:
ÅÅ' (
$str
ÅÅ) -
)
ÅÅ- .
;
ÅÅ. /
}
ÆÆ 
)
ÆÆ 
;
ÆÆ 
migrationBuilder
ÈÈ 
.
ÈÈ 
CreateTable
ÈÈ (
(
ÈÈ( )
name
ÉÉ 
:
ÉÉ 
$str
ÉÉ 
,
ÉÉ 
schema
ÊÊ 
:
ÊÊ 
$str
ÊÊ  
,
ÊÊ  !
columns
ËË 
:
ËË 
table
ËË 
=>
ËË !
new
ËË" %
{
ÌÌ 
Id
ÍÍ 
=
ÍÍ 
table
ÍÍ 
.
ÍÍ 
Column
ÍÍ %
<
ÍÍ% &
Guid
ÍÍ& *
>
ÍÍ* +
(
ÍÍ+ ,
type
ÍÍ, 0
:
ÍÍ0 1
$str
ÍÍ2 8
,
ÍÍ8 9
nullable
ÍÍ: B
:
ÍÍB C
false
ÍÍD I
)
ÍÍI J
,
ÍÍJ K
Quantity
ÎÎ 
=
ÎÎ 
table
ÎÎ $
.
ÎÎ$ %
Column
ÎÎ% +
<
ÎÎ+ ,
int
ÎÎ, /
>
ÎÎ/ 0
(
ÎÎ0 1
type
ÎÎ1 5
:
ÎÎ5 6
$str
ÎÎ7 @
,
ÎÎ@ A
nullable
ÎÎB J
:
ÎÎJ K
false
ÎÎL Q
)
ÎÎQ R
,
ÎÎR S

TotalPrice
ÏÏ 
=
ÏÏ  
table
ÏÏ! &
.
ÏÏ& '
Column
ÏÏ' -
<
ÏÏ- .
decimal
ÏÏ. 5
>
ÏÏ5 6
(
ÏÏ6 7
type
ÏÏ7 ;
:
ÏÏ; <
$str
ÏÏ= F
,
ÏÏF G
nullable
ÏÏH P
:
ÏÏP Q
false
ÏÏR W
)
ÏÏW X
,
ÏÏX Y
TotalTax
ÐÐ 
=
ÐÐ 
table
ÐÐ $
.
ÐÐ$ %
Column
ÐÐ% +
<
ÐÐ+ ,
decimal
ÐÐ, 3
>
ÐÐ3 4
(
ÐÐ4 5
type
ÐÐ5 9
:
ÐÐ9 :
$str
ÐÐ; D
,
ÐÐD E
nullable
ÐÐF N
:
ÐÐN O
false
ÐÐP U
)
ÐÐU V
,
ÐÐV W
SaleType
ÑÑ 
=
ÑÑ 
table
ÑÑ $
.
ÑÑ$ %
Column
ÑÑ% +
<
ÑÑ+ ,
int
ÑÑ, /
>
ÑÑ/ 0
(
ÑÑ0 1
type
ÑÑ1 5
:
ÑÑ5 6
$str
ÑÑ7 @
,
ÑÑ@ A
nullable
ÑÑB J
:
ÑÑJ K
false
ÑÑL Q
)
ÑÑQ R
,
ÑÑR S
PaymentType
ÒÒ 
=
ÒÒ  !
table
ÒÒ" '
.
ÒÒ' (
Column
ÒÒ( .
<
ÒÒ. /
int
ÒÒ/ 2
>
ÒÒ2 3
(
ÒÒ3 4
type
ÒÒ4 8
:
ÒÒ8 9
$str
ÒÒ: C
,
ÒÒC D
nullable
ÒÒE M
:
ÒÒM N
false
ÒÒO T
)
ÒÒT U
,
ÒÒU V
DeliveryDate
ÓÓ  
=
ÓÓ! "
table
ÓÓ# (
.
ÓÓ( )
Column
ÓÓ) /
<
ÓÓ/ 0
DateTime
ÓÓ0 8
>
ÓÓ8 9
(
ÓÓ9 :
type
ÓÓ: >
:
ÓÓ> ?
$str
ÓÓ@ K
,
ÓÓK L
nullable
ÓÓM U
:
ÓÓU V
false
ÓÓW \
)
ÓÓ\ ]
,
ÓÓ] ^
SaleDate
ÔÔ 
=
ÔÔ 
table
ÔÔ $
.
ÔÔ$ %
Column
ÔÔ% +
<
ÔÔ+ ,
DateTime
ÔÔ, 4
>
ÔÔ4 5
(
ÔÔ5 6
type
ÔÔ6 :
:
ÔÔ: ;
$str
ÔÔ< G
,
ÔÔG H
nullable
ÔÔI Q
:
ÔÔQ R
false
ÔÔS X
)
ÔÔX Y
,
ÔÔY Z
PaymentDate
ÕÕ 
=
ÕÕ  !
table
ÕÕ" '
.
ÕÕ' (
Column
ÕÕ( .
<
ÕÕ. /
DateTime
ÕÕ/ 7
>
ÕÕ7 8
(
ÕÕ8 9
type
ÕÕ9 =
:
ÕÕ= >
$str
ÕÕ? J
,
ÕÕJ K
nullable
ÕÕL T
:
ÕÕT U
false
ÕÕV [
)
ÕÕ[ \
,
ÕÕ\ ]

IdCustomer
ÖÖ 
=
ÖÖ  
table
ÖÖ! &
.
ÖÖ& '
Column
ÖÖ' -
<
ÖÖ- .
Guid
ÖÖ. 2
>
ÖÖ2 3
(
ÖÖ3 4
type
ÖÖ4 8
:
ÖÖ8 9
$str
ÖÖ: @
,
ÖÖ@ A
nullable
ÖÖB J
:
ÖÖJ K
false
ÖÖL Q
)
ÖÖQ R
,
ÖÖR S
	CreatedAt
×× 
=
×× 
table
××  %
.
××% &
Column
××& ,
<
××, -
DateTime
××- 5
>
××5 6
(
××6 7
type
××7 ;
:
××; <
$str
××= Z
,
××Z [
nullable
××\ d
:
××d e
false
××f k
)
××k l
,
××l m
	UpdatedAt
ØØ 
=
ØØ 
table
ØØ  %
.
ØØ% &
Column
ØØ& ,
<
ØØ, -
DateTime
ØØ- 5
>
ØØ5 6
(
ØØ6 7
type
ØØ7 ;
:
ØØ; <
$str
ØØ= Z
,
ØØZ [
nullable
ØØ\ d
:
ØØd e
true
ØØf j
)
ØØj k
,
ØØk l
	DeletedAt
ÙÙ 
=
ÙÙ 
table
ÙÙ  %
.
ÙÙ% &
Column
ÙÙ& ,
<
ÙÙ, -
DateTime
ÙÙ- 5
>
ÙÙ5 6
(
ÙÙ6 7
type
ÙÙ7 ;
:
ÙÙ; <
$str
ÙÙ= Z
,
ÙÙZ [
nullable
ÙÙ\ d
:
ÙÙd e
true
ÙÙf j
)
ÙÙj k
}
ÚÚ 
,
ÚÚ 
constraints
ÛÛ 
:
ÛÛ 
table
ÛÛ "
=>
ÛÛ# %
{
ÜÜ 
table
ÝÝ 
.
ÝÝ 

PrimaryKey
ÝÝ $
(
ÝÝ$ %
$str
ÝÝ% /
,
ÝÝ/ 0
x
ÝÝ1 2
=>
ÝÝ3 5
x
ÝÝ6 7
.
ÝÝ7 8
Id
ÝÝ8 :
)
ÝÝ: ;
;
ÝÝ; <
table
ÞÞ 
.
ÞÞ 

ForeignKey
ÞÞ $
(
ÞÞ$ %
name
ßß 
:
ßß 
$str
ßß =
,
ßß= >
column
àà 
:
àà 
x
àà  !
=>
àà" $
x
àà% &
.
àà& '

IdCustomer
àà' 1
,
àà1 2
principalSchema
áá '
:
áá' (
$str
áá) 1
,
áá1 2
principalTable
ââ &
:
ââ& '
$str
ââ( 3
,
ââ3 4
principalColumn
ãã '
:
ãã' (
$str
ãã) -
)
ãã- .
;
ãã. /
}
ää 
)
ää 
;
ää 
migrationBuilder
ææ 
.
ææ 
CreateTable
ææ (
(
ææ( )
name
çç 
:
çç 
$str
çç #
,
çç# $
schema
èè 
:
èè 
$str
èè  
,
èè  !
columns
éé 
:
éé 
table
éé 
=>
éé !
new
éé" %
{
êê 
Id
ëë 
=
ëë 
table
ëë 
.
ëë 
Column
ëë %
<
ëë% &
Guid
ëë& *
>
ëë* +
(
ëë+ ,
type
ëë, 0
:
ëë0 1
$str
ëë2 8
,
ëë8 9
nullable
ëë: B
:
ëëB C
false
ëëD I
)
ëëI J
,
ëëJ K
Quantity
ìì 
=
ìì 
table
ìì $
.
ìì$ %
Column
ìì% +
<
ìì+ ,
int
ìì, /
>
ìì/ 0
(
ìì0 1
type
ìì1 5
:
ìì5 6
$str
ìì7 @
,
ìì@ A
nullable
ììB J
:
ììJ K
false
ììL Q
)
ììQ R
,
ììR S
	DateOrder
íí 
=
íí 
table
íí  %
.
íí% &
Column
íí& ,
<
íí, -
string
íí- 3
>
íí3 4
(
íí4 5
type
íí5 9
:
íí9 :
$str
íí; H
,
ííH I
nullable
ííJ R
:
ííR S
false
ííT Y
)
ííY Z
,
ííZ [
	IdProduct
îî 
=
îî 
table
îî  %
.
îî% &
Column
îî& ,
<
îî, -
Guid
îî- 1
>
îî1 2
(
îî2 3
type
îî3 7
:
îî7 8
$str
îî9 ?
,
îî? @
nullable
îîA I
:
îîI J
false
îîK P
)
îîP Q
,
îîQ R
	CreatedAt
ïï 
=
ïï 
table
ïï  %
.
ïï% &
Column
ïï& ,
<
ïï, -
DateTime
ïï- 5
>
ïï5 6
(
ïï6 7
type
ïï7 ;
:
ïï; <
$str
ïï= Z
,
ïïZ [
nullable
ïï\ d
:
ïïd e
false
ïïf k
)
ïïk l
,
ïïl m
	UpdatedAt
ðð 
=
ðð 
table
ðð  %
.
ðð% &
Column
ðð& ,
<
ðð, -
DateTime
ðð- 5
>
ðð5 6
(
ðð6 7
type
ðð7 ;
:
ðð; <
$str
ðð= Z
,
ððZ [
nullable
ðð\ d
:
ððd e
true
ððf j
)
ððj k
,
ððk l
	DeletedAt
ññ 
=
ññ 
table
ññ  %
.
ññ% &
Column
ññ& ,
<
ññ, -
DateTime
ññ- 5
>
ññ5 6
(
ññ6 7
type
ññ7 ;
:
ññ; <
$str
ññ= Z
,
ññZ [
nullable
ññ\ d
:
ññd e
true
ññf j
)
ññj k
}
òò 
,
òò 
constraints
óó 
:
óó 
table
óó "
=>
óó# %
{
ôô 
table
õõ 
.
õõ 

PrimaryKey
õõ $
(
õõ$ %
$str
õõ% 5
,
õõ5 6
x
õõ7 8
=>
õõ9 ;
x
õõ< =
.
õõ= >
Id
õõ> @
)
õõ@ A
;
õõA B
table
öö 
.
öö 

ForeignKey
öö $
(
öö$ %
name
÷÷ 
:
÷÷ 
$str
÷÷ A
,
÷÷A B
column
øø 
:
øø 
x
øø  !
=>
øø" $
x
øø% &
.
øø& '
	IdProduct
øø' 0
,
øø0 1
principalSchema
ùù '
:
ùù' (
$str
ùù) 1
,
ùù1 2
principalTable
úú &
:
úú& '
$str
úú( 2
,
úú2 3
principalColumn
ûû '
:
ûû' (
$str
ûû) -
)
ûû- .
;
ûû. /
}
üü 
)
üü 
;
üü 
migrationBuilder
þþ 
.
þþ 
CreateTable
þþ (
(
þþ( )
name
ÿÿ 
:
ÿÿ 
$str
ÿÿ $
,
ÿÿ$ %
schema
 
:
 
$str
  
,
  !
columns
 
:
 
table
 
=>
 !
new
" %
{
 
Id
 
=
 
table
 
.
 
Column
 %
<
% &
Guid
& *
>
* +
(
+ ,
type
, 0
:
0 1
$str
2 8
,
8 9
nullable
: B
:
B C
false
D I
)
I J
,
J K
Quantity
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
int
, /
>
/ 0
(
0 1
type
1 5
:
5 6
$str
7 @
,
@ A
nullable
B J
:
J K
false
L Q
)
Q R
,
R S
	IdProduct
 
=
 
table
  %
.
% &
Column
& ,
<
, -
Guid
- 1
>
1 2
(
2 3
type
3 7
:
7 8
$str
9 ?
,
? @
nullable
A I
:
I J
false
K P
)
P Q
,
Q R
IdSale
 
=
 
table
 "
.
" #
Column
# )
<
) *
Guid
* .
>
. /
(
/ 0
type
0 4
:
4 5
$str
6 <
,
< =
nullable
> F
:
F G
false
H M
)
M N
,
N O
	CreatedAt
 
=
 
table
  %
.
% &
Column
& ,
<
, -
DateTime
- 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= Z
,
Z [
nullable
\ d
:
d e
false
f k
)
k l
,
l m
	UpdatedAt
 
=
 
table
  %
.
% &
Column
& ,
<
, -
DateTime
- 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= Z
,
Z [
nullable
\ d
:
d e
true
f j
)
j k
,
k l
	DeletedAt
 
=
 
table
  %
.
% &
Column
& ,
<
, -
DateTime
- 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= Z
,
Z [
nullable
\ d
:
d e
true
f j
)
j k
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 6
,
6 7
x
8 9
=>
: <
x
= >
.
> ?
Id
? A
)
A B
;
B C
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 B
,
B C
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
	IdProduct
' 0
,
0 1
principalSchema
 '
:
' (
$str
) 1
,
1 2
principalTable
 &
:
& '
$str
( 2
,
2 3
principalColumn
 '
:
' (
$str
) -
)
- .
;
. /
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 <
,
< =
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
IdSale
' -
,
- .
principalSchema
 '
:
' (
$str
) 1
,
1 2
principalTable
 &
:
& '
$str
( /
,
/ 0
principalColumn
 '
:
' (
$str
) -
)
- .
;
. /
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 5
,
5 6
schema
 
:
 
$str
  
,
  !
table
 
:
 
$str
 "
,
" #
column
   
:
   
$str
   *
)
  * +
;
  + ,
migrationBuilder
¢¢ 
.
¢¢ 
CreateIndex
¢¢ (
(
¢¢( )
name
££ 
:
££ 
$str
££ 6
,
££6 7
schema
¤¤ 
:
¤¤ 
$str
¤¤  
,
¤¤  !
table
¥¥ 
:
¥¥ 
$str
¥¥ "
,
¥¥" #
column
¦¦ 
:
¦¦ 
$str
¦¦ +
)
¦¦+ ,
;
¦¦, -
migrationBuilder
¨¨ 
.
¨¨ 
CreateIndex
¨¨ (
(
¨¨( )
name
©© 
:
©© 
$str
©© .
,
©©. /
schema
ªª 
:
ªª 
$str
ªª  
,
ªª  !
table
«« 
:
«« 
$str
«« !
,
««! "
column
¬¬ 
:
¬¬ 
$str
¬¬ $
)
¬¬$ %
;
¬¬% &
migrationBuilder
®® 
.
®® 
CreateIndex
®® (
(
®®( )
name
¯¯ 
:
¯¯ 
$str
¯¯ -
,
¯¯- .
schema
°° 
:
°° 
$str
°°  
,
°°  !
table
±± 
:
±± 
$str
±± !
,
±±! "
column
²² 
:
²² 
$str
²² #
)
²²# $
;
²²$ %
migrationBuilder
´´ 
.
´´ 
CreateIndex
´´ (
(
´´( )
name
µµ 
:
µµ 
$str
µµ 1
,
µµ1 2
schema
¶¶ 
:
¶¶ 
$str
¶¶  
,
¶¶  !
table
·· 
:
·· 
$str
·· %
,
··% &
column
¸¸ 
:
¸¸ 
$str
¸¸ #
)
¸¸# $
;
¸¸$ %
migrationBuilder
ºº 
.
ºº 
CreateIndex
ºº (
(
ºº( )
name
»» 
:
»» 
$str
»» .
,
»». /
schema
¼¼ 
:
¼¼ 
$str
¼¼  
,
¼¼  !
table
½½ 
:
½½ 
$str
½½ %
,
½½% &
column
¾¾ 
:
¾¾ 
$str
¾¾  
)
¾¾  !
;
¾¾! "
migrationBuilder
ÀÀ 
.
ÀÀ 
CreateIndex
ÀÀ (
(
ÀÀ( )
name
ÁÁ 
:
ÁÁ 
$str
ÁÁ +
,
ÁÁ+ ,
schema
ÂÂ 
:
ÂÂ 
$str
ÂÂ  
,
ÂÂ  !
table
ÃÃ 
:
ÃÃ 
$str
ÃÃ 
,
ÃÃ 
column
ÄÄ 
:
ÄÄ 
$str
ÄÄ $
)
ÄÄ$ %
;
ÄÄ% &
migrationBuilder
ÆÆ 
.
ÆÆ 
CreateIndex
ÆÆ (
(
ÆÆ( )
name
ÇÇ 
:
ÇÇ 
$str
ÇÇ *
,
ÇÇ* +
schema
ÈÈ 
:
ÈÈ 
$str
ÈÈ  
,
ÈÈ  !
table
ÉÉ 
:
ÉÉ 
$str
ÉÉ 
,
ÉÉ 
column
ÊÊ 
:
ÊÊ 
$str
ÊÊ $
)
ÊÊ$ %
;
ÊÊ% &
migrationBuilder
ÌÌ 
.
ÌÌ 
CreateIndex
ÌÌ (
(
ÌÌ( )
name
ÍÍ 
:
ÍÍ 
$str
ÍÍ 0
,
ÍÍ0 1
schema
ÎÎ 
:
ÎÎ 
$str
ÎÎ  
,
ÎÎ  !
table
ÏÏ 
:
ÏÏ 
$str
ÏÏ $
,
ÏÏ$ %
column
ÐÐ 
:
ÐÐ 
$str
ÐÐ #
)
ÐÐ# $
;
ÐÐ$ %
}
ÑÑ 	
	protected
ÔÔ 
override
ÔÔ 
void
ÔÔ 
Down
ÔÔ  $
(
ÔÔ$ %
MigrationBuilder
ÔÔ% 5
migrationBuilder
ÔÔ6 F
)
ÔÔF G
{
ÕÕ 	
migrationBuilder
ÖÖ 
.
ÖÖ 
	DropTable
ÖÖ &
(
ÖÖ& '
name
×× 
:
×× 
$str
×× $
,
××$ %
schema
ØØ 
:
ØØ 
$str
ØØ  
)
ØØ  !
;
ØØ! "
migrationBuilder
ÚÚ 
.
ÚÚ 
	DropTable
ÚÚ &
(
ÚÚ& '
name
ÛÛ 
:
ÛÛ 
$str
ÛÛ 
,
ÛÛ 
schema
ÜÜ 
:
ÜÜ 
$str
ÜÜ  
)
ÜÜ  !
;
ÜÜ! "
migrationBuilder
ÞÞ 
.
ÞÞ 
	DropTable
ÞÞ &
(
ÞÞ& '
name
ßß 
:
ßß 
$str
ßß #
,
ßß# $
schema
àà 
:
àà 
$str
àà  
)
àà  !
;
àà! "
migrationBuilder
ââ 
.
ââ 
	DropTable
ââ &
(
ââ& '
name
ãã 
:
ãã 
$str
ãã 
,
ãã 
schema
ää 
:
ää 
$str
ää  
)
ää  !
;
ää! "
migrationBuilder
ææ 
.
ææ 
	DropTable
ææ &
(
ææ& '
name
çç 
:
çç 
$str
çç  
,
çç  !
schema
èè 
:
èè 
$str
èè  
)
èè  !
;
èè! "
migrationBuilder
êê 
.
êê 
	DropTable
êê &
(
êê& '
name
ëë 
:
ëë 
$str
ëë !
,
ëë! "
schema
ìì 
:
ìì 
$str
ìì  
)
ìì  !
;
ìì! "
migrationBuilder
îî 
.
îî 
	DropTable
îî &
(
îî& '
name
ïï 
:
ïï 
$str
ïï "
,
ïï" #
schema
ðð 
:
ðð 
$str
ðð  
)
ðð  !
;
ðð! "
migrationBuilder
òò 
.
òò 
	DropTable
òò &
(
òò& '
name
óó 
:
óó 
$str
óó !
,
óó! "
schema
ôô 
:
ôô 
$str
ôô  
)
ôô  !
;
ôô! "
migrationBuilder
öö 
.
öö 
	DropTable
öö &
(
öö& '
name
÷÷ 
:
÷÷ 
$str
÷÷ '
,
÷÷' (
schema
øø 
:
øø 
$str
øø  
)
øø  !
;
øø! "
migrationBuilder
úú 
.
úú 
	DropTable
úú &
(
úú& '
name
ûû 
:
ûû 
$str
ûû &
,
ûû& '
schema
üü 
:
üü 
$str
üü  
)
üü  !
;
üü! "
}
ýý 	
}
þþ 
}ÿÿ 
hD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\Mappings\TaxMapping.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3
Mappings3 ;
;; <
public 
class 

TaxMapping 
: $
IEntityTypeConfiguration 2
<2 3
Tax3 6
>6 7
{ 
public		 

void		 
	Configure		 
(		 
EntityTypeBuilder		 +
<		+ ,
Tax		, /
>		/ 0
builder		1 8
)		8 9
{

 
builder 
. 
HasKey 
( 
p 
=> 
p 
. 
Id  
)  !
;! "
builder 
. 
Property 
( 
c 
=> 
c 
.  
Name  $
)$ %
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str (
)( )
;) *
builder 
. 
Property 
( 
c 
=> 
c 
.  
Description  +
)+ ,
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str )
)) *
;* +
builder 
. 
Property 
( 
c 
=> 
c 
.  

Percentage  *
)* +
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str $
)$ %
;% &
builder 
. 
Property 
( 
x 
=> 
x 
.  

IdCategory  *
)* +
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
x 
=> 
x 
. 
Category #
)# $
. 
WithMany 
( 
x 
=> 
x 
. 
Taxs !
)! "
. 
HasForeignKey 
( 
x 
=> 
x  !
.! "

IdCategory" ,
), -
;- .
builder!! 
.!! 
Property!! 
(!! 
p!! 
=>!! 
p!! 
.!!  
	CreatedAt!!  )
)!!) *
.""
 

IsRequired"" 
("" 
true"" 
)"" 
;"" 
builder$$ 
.$$ 
Property$$ 
($$ 
p$$ 
=>$$ 
p$$ 
.$$  
	UpdatedAt$$  )
)$$) *
.%% 

IsRequired%% 
(%% 
false%% 
)%% 
;%% 
builder'' 
.'' 
Property'' 
('' 
p'' 
=>'' 
p'' 
.''  
	DeletedAt''  )
)'') *
.(( 

IsRequired(( 
((( 
false(( 
)(( 
;(( 
})) 
}** 
pD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\Mappings\SaleProductMapping.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3
Mappings3 ;
;; <
public 
class 
SaleProductMapping 
:  !$
IEntityTypeConfiguration" :
<: ;
SaleProduct; F
>F G
{ 
public		 

void		 
	Configure		 
(		 
EntityTypeBuilder		 +
<		+ ,
SaleProduct		, 7
>		7 8
builder		9 @
)		@ A
{

 
builder 
. 
HasKey 
( 
p 
=> 
p 
. 
Id  
)  !
;! "
builder 
. 
Property 
( 
x 
=> 
x 
.  
	IdProduct  )
)) *
. 

IsRequired 
( 
) 
; 
builder 
. 
Property 
( 
x 
=> 
x 
.  
Quantity  (
)( )
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str $
)$ %
;% &
builder 
. 
HasOne 
( 
x 
=> 
x 
. 
Product "
)" #
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
x 
=> 
x  !
.! "
	IdProduct" +
)+ ,
;, -
builder 
. 
Property 
( 
x 
=> 
x 
.  
IdSale  &
)& '
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
x 
=> 
x 
. 
Sale 
)  
. 
WithMany 
( 
x 
=> 
x 
. 
SaleProducts )
)) *
. 
HasForeignKey 
( 
x 
=> 
x  !
.! "
IdSale" (
)( )
;) *
builder!! 
.!! 
Property!! 
(!! 
p!! 
=>!! 
p!! 
.!!  
	CreatedAt!!  )
)!!) *
.""
 

IsRequired"" 
("" 
true"" 
)"" 
;"" 
builder$$ 
.$$ 
Property$$ 
($$ 
p$$ 
=>$$ 
p$$ 
.$$  
	UpdatedAt$$  )
)$$) *
.%% 

IsRequired%% 
(%% 
false%% 
)%% 
;%% 
builder'' 
.'' 
Property'' 
('' 
p'' 
=>'' 
p'' 
.''  
	DeletedAt''  )
)'') *
.(( 

IsRequired(( 
((( 
false(( 
)(( 
;(( 
})) 
}** (
iD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\Mappings\SaleMapping.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3
Mappings3 ;
;; <
public 
class 
SaleMapping 
: $
IEntityTypeConfiguration 3
<3 4
Sale4 8
>8 9
{ 
public		 

void		 
	Configure		 
(		 
EntityTypeBuilder		 +
<		+ ,
Sale		, 0
>		0 1
builder		2 9
)		9 :
{

 
builder 
. 
HasKey 
( 
p 
=> 
p 
. 
Id  
)  !
;! "
builder 
. 
Property 
( 
c 
=> 
c 
.  
Quantity  (
)( )
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str $
)$ %
;% &
builder 
. 
Property 
( 
c 
=> 
c 
.  
SaleType  (
)( )
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str $
)$ %
;% &
builder 
. 
Property 
( 
c 
=> 
c 
.  
PaymentType  +
)+ ,
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str $
)$ %
;% &
builder 
. 
Property 
( 
c 
=> 
c 
.  

TotalPrice  *
)* +
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str $
)$ %
;% &
builder 
. 
Property 
( 
c 
=> 
c 
.  
TotalTax  (
)( )
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str $
)$ %
;% &
builder!! 
.!! 
Property!! 
(!! 
c!! 
=>!! 
c!! 
.!!  
DeliveryDate!!  ,
)!!, -
."" 

IsRequired"" 
("" 
)"" 
.## 
HasColumnType## 
(## 
$str## %
)##% &
;##& '
builder%% 
.%% 
Property%% 
(%% 
c%% 
=>%% 
c%% 
.%%  
SaleDate%%  (
)%%( )
.&& 

IsRequired&& 
(&& 
)&& 
.'' 
HasColumnType'' 
('' 
$str'' %
)''% &
;''& '
builder)) 
.)) 
Property)) 
()) 
c)) 
=>)) 
c)) 
.))  
PaymentDate))  +
)))+ ,
.** 

IsRequired** 
(** 
)** 
.++ 
HasColumnType++ 
(++ 
$str++ %
)++% &
;++& '
builder-- 
.-- 
Property-- 
(-- 
x-- 
=>-- 
x-- 
.--  

IdCustomer--  *
)--* +
... 

IsRequired.. 
(.. 
).. 
;.. 
builder00 
.11 
HasOne11 
(11 
x11 
=>11 
x11 
.11 
Customer11 #
)11# $
.22 
WithMany22 
(22 
)22 
.33 
HasForeignKey33 
(33 
x33 
=>33 
x33  !
.33! "

IdCustomer33" ,
)33, -
;33- .
builder55 
.55 
Property55 
(55 
p55 
=>55 
p55 
.55  
	CreatedAt55  )
)55) *
.66 

IsRequired66 
(66 
true66 
)66 
;66 
builder88 
.88 
Property88 
(88 
p88 
=>88 
p88 
.88  
	UpdatedAt88  )
)88) *
.99 

IsRequired99 
(99 
false99 
)99 
;99 
builder;; 
.;; 
Property;; 
(;; 
p;; 
=>;; 
p;; 
.;;  
	DeletedAt;;  )
);;) *
.<< 

IsRequired<< 
(<< 
false<< 
)<< 
;<< 
}== 
}>> Â,
lD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\Mappings\ProductMapping.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3
Mappings3 ;
;; <
public 
class 
ProductMapping 
: $
IEntityTypeConfiguration 6
<6 7
Product7 >
>> ?
{ 
public 

void 
	Configure 
( 
	Microsoft #
.# $
EntityFrameworkCore$ 7
.7 8
Metadata8 @
.@ A
BuildersA I
.I J
EntityTypeBuilderJ [
<[ \
Product\ c
>c d
buildere l
)l m
{		 
builder

 
.

 
HasKey

 
(

 
p

 
=>

 
p

 
.

 
Id

  
)

  !
;

! "
builder 
. 
Property 
( 
c 
=> 
c 
.  
Description  +
)+ ,
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str )
)) *
;* +
builder 
. 
Property 
( 
c 
=> 
c 
.  
ShortDescription  0
)0 1
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str )
)) *
;* +
builder 
. 
Property 
( 
c 
=> 
c 
.  
Price  %
)% &
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str $
)$ %
;% &
builder 
. 
Property 
( 
c 
=> 
c 
.  
Weight  &
)& '
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str $
)$ %
;% &
builder 
. 
Property 
( 
c 
=> 
c 
.  
Height  &
)& '
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str $
)$ %
;% &
builder   
.   
Property   
(   
c   
=>   
c   
.    
Length    &
)  & '
.!! 

IsRequired!! 
(!! 
)!! 
."" 
HasColumnType"" 
("" 
$str"" $
)""$ %
;""% &
builder$$ 
.$$ 
Property$$ 
($$ 
c$$ 
=>$$ 
c$$ 
.$$  
Image$$  %
)$$% &
.%% 

IsRequired%% 
(%% 
)%% 
.&& 
HasColumnType&& 
(&& 
$str&& *
)&&* +
;&&+ ,
builder(( 
.(( 
Property(( 
((( 
x(( 
=>(( 
x(( 
.((  

IdCategory((  *
)((* +
.)) 

IsRequired)) 
()) 
))) 
;)) 
builder++ 
.,, 
HasOne,, 
(,, 
x,, 
=>,, 
x,, 
.,, 
Category,, #
),,# $
.-- 
WithMany-- 
(-- 
x-- 
=>-- 
x-- 
.-- 
Products-- %
)--% &
... 
HasForeignKey.. 
(.. 
x.. 
=>.. 
x..  !
...! "

IdCategory.." ,
).., -
;..- .
builder00 
.00 
Property00 
(00 
x00 
=>00 
x00 
.00  
	IdCompany00  )
)00) *
.11 

IsRequired11 
(11 
)11 
;11 
builder33 
.44 
HasOne44 
(44 
x44 
=>44 
x44 
.44 
Company44 "
)44" #
.55 
WithMany55 
(55 
)55 
.66 
HasForeignKey66 
(66 
x66 
=>66 
x66  !
.66! "
	IdCompany66" +
)66+ ,
;66, -
builder88 
.88 
Property88 
(88 
p88 
=>88 
p88 
.88  
	CreatedAt88  )
)88) *
.99 

IsRequired99 
(99 
true99 
)99 
;99 
builder;; 
.;; 
Property;; 
(;; 
p;; 
=>;; 
p;; 
.;;  
	UpdatedAt;;  )
);;) *
.<< 

IsRequired<< 
(<< 
false<< 
)<< 
;<< 
builder>> 
.>> 
Property>> 
(>> 
p>> 
=>>> 
p>> 
.>>  
	DeletedAt>>  )
)>>) *
.?? 

IsRequired?? 
(?? 
false?? 
)?? 
;?? 
}@@ 
}AA 
nD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\Mappings\InventoryMapping.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3
Mappings3 ;
;; <
public 
class 
InventoryMapping 
: $
IEntityTypeConfiguration  8
<8 9
	Inventory9 B
>B C
{ 
public		 

void		 
	Configure		 
(		 
EntityTypeBuilder		 +
<		+ ,
	Inventory		, 5
>		5 6
builder		7 >
)		> ?
{

 
builder 
. 
HasKey 
( 
p 
=> 
p 
. 
Id  
)  !
;! "
builder 
. 
Property 
( 
c 
=> 
c 
.  
Quantity  (
)( )
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str $
)$ %
;% &
builder 
. 
Property 
( 
c 
=> 
c 
.  
	DateOrder  )
)) *
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str (
)( )
;) *
builder 
. 
Property 
( 
x 
=> 
x 
.  
	IdProduct  )
)) *
. 

IsRequired 
( 
) 
; 
builder 
. 
HasOne 
( 
x 
=> 
x 
. 
Product "
)" #
. 
WithMany 
( 
) 
. 
HasForeignKey 
( 
x 
=> 
x  !
.! "
	IdProduct" +
)+ ,
;, -
builder 
. 
Property 
( 
p 
=> 
p 
.  
	CreatedAt  )
)) *
. 

IsRequired 
( 
true 
) 
; 
builder   
.   
Property   
(   
p   
=>   
p   
.    
	UpdatedAt    )
)  ) *
.!! 

IsRequired!! 
(!! 
false!! 
)!! 
;!! 
builder## 
.## 
Property## 
(## 
p## 
=>## 
p## 
.##  
	DeletedAt##  )
)##) *
.$$ 

IsRequired$$ 
($$ 
false$$ 
)$$ 
;$$ 
}%% 
}&&  
lD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\Mappings\CompanyMapping.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3
Mappings3 ;
;; <
public 
class 
CompanyMapping 
: $
IEntityTypeConfiguration 6
<6 7
Company7 >
>> ?
{ 
public		 

void		 
	Configure		 
(		 
EntityTypeBuilder		 +
<		+ ,
Company		, 3
>		3 4
builder		5 <
)		< =
{

 
builder 
. 
HasKey 
( 
p 
=> 
p 
. 
Id  
)  !
;! "
builder 
. 
Property 
( 
c 
=> 
c 
.  
Name  $
)$ %
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str (
)( )
;) *
builder 
. 
Property 
( 
c 
=> 
c 
.  
DocId  %
)% &
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str (
)( )
;) *
builder 
. 
Property 
( 
c 
=> 
c 
.  
Email  %
)% &
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str )
)) *
;* +
builder 
. 
Property 
( 
c 
=> 
c 
.  
PhoneNumber  +
)+ ,
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str (
)( )
;) *
builder 
. 
Property 
( 
c 
=> 
c 
.  
Description  +
)+ ,
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str )
)) *
;* +
builder!! 
.!! 
Property!! 
(!! 
p!! 
=>!! 
p!! 
.!!  
	CreatedAt!!  )
)!!) *
."" 

IsRequired"" 
("" 
true"" 
)"" 
;"" 
builder$$ 
.$$ 
Property$$ 
($$ 
p$$ 
=>$$ 
p$$ 
.$$  
	UpdatedAt$$  )
)$$) *
.%% 

IsRequired%% 
(%% 
false%% 
)%% 
;%% 
builder'' 
.'' 
Property'' 
('' 
p'' 
=>'' 
p'' 
.''  
	DeletedAt''  )
)'') *
.(( 

IsRequired(( 
((( 
false(( 
)(( 
;(( 
builder** 
.** 
Property** 
(** 
x** 
=>** 
x** 
.**  
IdCompanyAddress**  0
)**0 1
.**1 2

IsRequired**2 <
(**< =
)**= >
;**> ?
builder,, 
.-- 
HasOne-- 
(-- 
x-- 
=>-- 
x-- 
.-- 
CompanyAddress-- )
)--) *
... 
WithMany.. 
(.. 
).. 
.// 
HasForeignKey// 
(// 
x// 
=>// 
x//  !
.//! "
IdCompanyAddress//" 2
)//2 3
;//3 4
}00 
}11 é)
tD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\Mappings\CustomerAdresssMapping.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3
Mappings3 ;
;; <
public 
class #
CustomerAddresssMapping $
:% &$
IEntityTypeConfiguration' ?
<? @
CustomerAddress@ O
>O P
{ 
public 

void 
	Configure 
( 
	Microsoft #
.# $
EntityFrameworkCore$ 7
.7 8
Metadata8 @
.@ A
BuildersA I
.I J
EntityTypeBuilderJ [
<[ \
CustomerAddress\ k
>k l
builderm t
)t u
{		 
builder

 
.

 
HasKey

 
(

 
p

 
=>

 
p

 
.

 
Id

  
)

  !
;

! "
builder 
. 
Property 
( 
c 
=> 
c 
.  
Street  &
)& '
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str (
)( )
;) *
builder 
. 
Property 
( 
c 
=> 
c 
.  
Number  &
)& '
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str (
)( )
;) *
builder 
. 
Property 
( 
c 
=> 
c 
.  

Complement  *
)* +
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str '
)' (
;( )
builder 
. 
Property 
( 
c 
=> 
c 
.  
Neighborhood  ,
), -
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str '
)' (
;( )
builder 
. 
Property 
( 
c 
=> 
c 
.  
District  (
)( )
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str '
)' (
;( )
builder   
.   
Property   
(   
c   
=>   
c   
.    
City    $
)  $ %
.!! 

IsRequired!! 
(!! 
)!! 
."" 
HasColumnType"" 
("" 
$str"" '
)""' (
;""( )
builder$$ 
.$$ 
Property$$ 
($$ 
c$$ 
=>$$ 
c$$ 
.$$  
County$$  &
)$$& '
.%% 

IsRequired%% 
(%% 
)%% 
.&& 
HasColumnType&& 
(&& 
$str&& '
)&&' (
;&&( )
builder(( 
.(( 
Property(( 
((( 
c(( 
=>(( 
c(( 
.((  
ZipCode((  '
)((' (
.)) 

IsRequired)) 
()) 
))) 
.** 
HasColumnType** 
(** 
$str** '
)**' (
;**( )
builder,, 
.,, 
Property,, 
(,, 
c,, 
=>,, 
c,, 
.,,  
Latitude,,  (
),,( )
.-- 

IsRequired-- 
(-- 
)-- 
... 
HasColumnType.. 
(.. 
$str.. '
)..' (
;..( )
builder00 
.00 
Property00 
(00 
c00 
=>00 
c00 
.00  
	Longitude00  )
)00) *
.11 

IsRequired11 
(11 
)11 
.22 
HasColumnType22 
(22 
$str22 '
)22' (
;22( )
builder44 
.44 
Property44 
(44 
p44 
=>44 
p44 
.44  
	CreatedAt44  )
)44) *
.55 

IsRequired55 
(55 
true55 
)55 
;55 
builder77 
.77 
Property77 
(77 
p77 
=>77 
p77 
.77  
	UpdatedAt77  )
)77) *
.88 

IsRequired88 
(88 
false88 
)88 
;88 
builder:: 
.:: 
Property:: 
(:: 
p:: 
=>:: 
p:: 
.::  
	DeletedAt::  )
)::) *
.;; 

IsRequired;; 
(;; 
false;; 
);; 
;;; 
}<< 
}==  
mD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\Mappings\CustomerMapping.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3
Mappings3 ;
;; <
public 
class 
CustomerMapping 
: $
IEntityTypeConfiguration 7
<7 8
Customer8 @
>@ A
{ 
public		 

void		 
	Configure		 
(		 
EntityTypeBuilder		 +
<		+ ,
Customer		, 4
>		4 5
builder		6 =
)		= >
{

 
builder 
. 
HasKey 
( 
p 
=> 
p 
. 
Id  
)  !
;! "
builder 
. 
Property 
( 
c 
=> 
c 
.  
Name  $
)$ %
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str (
)( )
;) *
builder 
. 
Property 
( 
c 
=> 
c 
.  
DocId  %
)% &
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str (
)( )
;) *
builder 
. 
Property 
( 
c 
=> 
c 
.  
Email  %
)% &
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str (
)( )
;) *
builder 
. 
Property 
( 
c 
=> 
c 
.  
PhoneNumber  +
)+ ,
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str (
)( )
;) *
builder 
. 
Property 
( 
c 
=> 
c 
.  
Description  +
)+ ,
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str )
)) *
;* +
builder!! 
.!! 
Property!! 
(!! 
x!! 
=>!! 
x!! 
.!!  
IdCustomerAddress!!  1
)!!1 2
.!!2 3

IsRequired!!3 =
(!!= >
)!!> ?
;!!? @
builder## 
.$$ 
HasOne$$ 
($$ 
x$$ 
=>$$ 
x$$ 
.$$ 
CustomerAddress$$ *
)$$* +
.%% 
WithMany%% 
(%% 
)%% 
.&& 
HasForeignKey&& 
(&& 
x&& 
=>&& 
x&&  !
.&&! "
IdCustomerAddress&&" 3
)&&3 4
;&&4 5
builder(( 
.(( 
Property(( 
((( 
p(( 
=>(( 
p(( 
.((  
	CreatedAt((  )
)(() *
.)) 

IsRequired)) 
()) 
true)) 
))) 
;)) 
builder++ 
.++ 
Property++ 
(++ 
p++ 
=>++ 
p++ 
.++  
	UpdatedAt++  )
)++) *
.,, 

IsRequired,, 
(,, 
false,, 
),, 
;,, 
builder.. 
... 
Property.. 
(.. 
p.. 
=>.. 
p.. 
...  
	DeletedAt..  )
)..) *
.// 

IsRequired// 
(// 
false// 
)// 
;// 
}00 
}11 Å(
sD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\Mappings\CompanyAdresssMapping.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3
Mappings3 ;
;; <
public 
class "
CompanyAddresssMapping #
:$ %$
IEntityTypeConfiguration& >
<> ?
CompanyAddress? M
>M N
{ 
public		 

void		 
	Configure		 
(		 
EntityTypeBuilder		 +
<		+ ,
CompanyAddress		, :
>		: ;
builder		< C
)		C D
{

 
builder 
. 
HasKey 
( 
p 
=> 
p 
. 
Id  
)  !
;! "
builder 
. 
Property 
( 
c 
=> 
c 
.  
Street  &
)& '
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str (
)( )
;) *
builder 
. 
Property 
( 
c 
=> 
c 
.  
Number  &
)& '
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str (
)( )
;) *
builder 
. 
Property 
( 
c 
=> 
c 
.  

Complement  *
)* +
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str '
)' (
;( )
builder 
. 
Property 
( 
c 
=> 
c 
.  
Neighborhood  ,
), -
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str '
)' (
;( )
builder 
. 
Property 
( 
c 
=> 
c 
.  
District  (
)( )
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str '
)' (
;( )
builder!! 
.!! 
Property!! 
(!! 
c!! 
=>!! 
c!! 
.!!  
City!!  $
)!!$ %
."" 

IsRequired"" 
("" 
)"" 
.## 
HasColumnType## 
(## 
$str## '
)##' (
;##( )
builder%% 
.%% 
Property%% 
(%% 
c%% 
=>%% 
c%% 
.%%  
County%%  &
)%%& '
.&& 

IsRequired&& 
(&& 
)&& 
.'' 
HasColumnType'' 
('' 
$str'' '
)''' (
;''( )
builder)) 
.)) 
Property)) 
()) 
c)) 
=>)) 
c)) 
.))  
ZipCode))  '
)))' (
.** 

IsRequired** 
(** 
)** 
.++ 
HasColumnType++ 
(++ 
$str++ '
)++' (
;++( )
builder-- 
.-- 
Property-- 
(-- 
c-- 
=>-- 
c-- 
.--  
Latitude--  (
)--( )
... 

IsRequired.. 
(.. 
).. 
.// 
HasColumnType// 
(// 
$str// '
)//' (
;//( )
builder11 
.11 
Property11 
(11 
c11 
=>11 
c11 
.11  
	Longitude11  )
)11) *
.22 

IsRequired22 
(22 
)22 
.33 
HasColumnType33 
(33 
$str33 '
)33' (
;33( )
builder55 
.55 
Property55 
(55 
p55 
=>55 
p55 
.55  
	CreatedAt55  )
)55) *
.66 

IsRequired66 
(66 
true66 
)66 
;66 
builder88 
.88 
Property88 
(88 
p88 
=>88 
p88 
.88  
	UpdatedAt88  )
)88) *
.99 

IsRequired99 
(99 
false99 
)99 
;99 
builder;; 
.;; 
Property;; 
(;; 
p;; 
=>;; 
p;; 
.;;  
	DeletedAt;;  )
);;) *
.<< 

IsRequired<< 
(<< 
false<< 
)<< 
;<< 
}== 
}>> È
mD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\Mappings\CategoryMapping.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
.2 3
Mappings3 ;
;; <
public 
class 
CategoryMapping 
: $
IEntityTypeConfiguration 7
<7 8
Category8 @
>@ A
{ 
public		 

void		 
	Configure		 
(		 
EntityTypeBuilder		 +
<		+ ,
Category		, 4
>		4 5
builder		6 =
)		= >
{

 
builder 
. 
HasKey 
( 
p 
=> 
p 
. 
Id  
)  !
;! "
builder 
. 
Property 
( 
c 
=> 
c 
.  
Name  $
)$ %
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str (
)( )
;) *
builder 
. 
Property 
( 
c 
=> 
c 
.  
ShortDescription  0
)0 1
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str )
)) *
;* +
builder 
. 
Property 
( 
c 
=> 
c 
.  
Description  +
)+ ,
. 

IsRequired 
( 
) 
. 
HasColumnType 
( 
$str *
)* +
;+ ,
builder 
. 
Property 
( 
p 
=> 
p 
.  
	CreatedAt  )
)) *
. 

IsRequired 
( 
true 
) 
; 
builder 
. 
Property 
( 
p 
=> 
p 
.  
	UpdatedAt  )
)) *
. 

IsRequired 
( 
false 
) 
; 
builder 
. 
Property 
( 
p 
=> 
p 
.  
	DeletedAt  )
)) *
.   

IsRequired   
(   
false   
)   
;   
}!! 
}"" ê@
eD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Persistence\EstoqueDbContext.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Persistence' 2
;2 3
public		 
class		 
EstoqueDbContext		 
:		 
	DbContext		  )
{

 
public 

EstoqueDbContext 
( 
DbContextOptions ,
<, -
EstoqueDbContext- =
>= >
options? F
)F G
:H I
baseJ N
(N O
optionsO V
)V W
{ 

AppContext 
. 
	SetSwitch 
( 
$str C
,C D
trueE I
)I J
;J K
} 
public 

DbSet 
< 
Product 
> 
Products "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 

DbSet 
< 
Category 
> 

Categories %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 

DbSet 
< 
Company 
> 
	Companies #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 

DbSet 
< 
CompanyAddress 
>  
CompanyAddress! /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
public 

DbSet 
< 
Customer 
> 
	Customers $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 

DbSet 
< 
	Inventory 
> 
inventories '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 

DbSet 
< 
Sale 
> 
Sales 
{ 
get "
;" #
set$ '
;' (
}) *
public 

DbSet 
< 
SaleProduct 
> 
SaleProducts *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 

DbSet 
< 
Tax 
> 
Taxs 
{ 
get  
;  !
set" %
;% &
}' (
	protected 
override 
void 
OnConfiguring )
() *#
DbContextOptionsBuilder* A
optionsBuilderB P
)P Q
{ 
optionsBuilder 
. 
LogTo 
( 
Console $
.$ %
	WriteLine% .
). /
;/ 0
} 
	protected   
override   
void    
ConfigureConventions   0
(  0 1%
ModelConfigurationBuilder  1 J 
configurationBuilder  K _
)  _ `
{!! 
base"" 
.""  
ConfigureConventions"" !
(""! " 
configurationBuilder""" 6
)""6 7
;""7 8 
configurationBuilder$$ 
.$$ 

Properties$$ '
<$$' (
ZonedDateTime$$( 5
>$$5 6
($$6 7
x$$7 8
=>$$9 ;
x$$< =
.$$= >
HaveConversion$$> L
<$$L M"
ZonedDateTimeConverter$$M c
>$$c d
($$d e
)$$e f
)$$f g
;$$g h
}%% 
	protected'' 
override'' 
void'' 
OnModelCreating'' +
(''+ ,
ModelBuilder'', 8
modelBuilder''9 E
)''E F
{(( 
modelBuilder)) 
.)) 
HasDefaultSchema)) %
())% &
$str))& .
))). /
;))/ 0
modelBuilder** 
.** +
ApplyConfigurationsFromAssembly** 4
(**4 5
typeof**5 ;
(**; <
CategoryMapping**< K
)**K L
.**L M
Assembly**M U
)**U V
;**V W
foreach,, 
(,, 
var,, 
relationship,, !
in,," $
modelBuilder,,% 1
.,,1 2
Model,,2 7
.,,7 8
GetEntityTypes,,8 F
(,,F G
),,G H
.,,H I

SelectMany,,I S
(,,S T
e,,T U
=>,,V X
e,,Y Z
.,,Z [
GetForeignKeys,,[ i
(,,i j
),,j k
),,k l
),,l m
relationship,,n z
.,,z {
DeleteBehavior	,,{ 
=
,, 
DeleteBehavior
,, 
.
,, 
ClientSetNull
,, ¨
;
,,¨ ©
base.. 
... 
OnModelCreating.. 
(.. 
modelBuilder.. )
)..) *
;..* +
}// 
public11 

override11 
Task11 
<11 
int11 
>11 
SaveChangesAsync11 .
(11. /
CancellationToken11/ @
cancellationToken11A R
=11S T
new11U X
CancellationToken11Y j
(11j k
)11k l
)11l m
{22 
foreach33 
(33 
var33 
entry33 
in33 
ChangeTracker33 +
.33+ ,
Entries33, 3
(333 4
)334 5
.335 6
Where336 ;
(33; <
entry33< A
=>33B D
entry33E J
.33J K
Entity33K Q
.33Q R
GetType33R Y
(33Y Z
)33Z [
.33[ \
GetProperty33\ g
(33g h
$str33h s
)33s t
!=33u w
null33x |
)33| }
)33} ~
{44 	
if55 
(55 
entry55 
.55 
State55 
==55 
EntityState55 *
.55* +
Added55+ 0
)550 1
{66 
entry77 
.77 
Property77 
(77 
$str77 *
)77* +
.77+ ,
CurrentValue77, 8
=779 :
DateTime77; C
.77C D
UtcNow77D J
;77J K
entry88 
.88 
Property88 
(88 
$str88 *
)88* +
.88+ ,
CurrentValue88, 8
=889 :
DateTime88; C
.88C D
UtcNow88D J
;88J K
}99 
if;; 
(;; 
entry;; 
.;; 
State;; 
==;; 
EntityState;; *
.;;* +
Modified;;+ 3
);;3 4
{<< 
entry== 
.== 
Property== 
(== 
$str== *
)==* +
.==+ ,
CurrentValue==, 8
===9 :
DateTime==; C
.==C D
UtcNow==D J
;==J K
entry>> 
.>> 
Property>> 
(>> 
$str>> *
)>>* +
.>>+ ,

IsModified>>, 6
=>>7 8
false>>9 >
;>>> ?
}?? 
}@@ 	
returnBB 
baseBB 
.BB 
SaveChangesAsyncBB $
(BB$ %
cancellationTokenBB% 6
)BB6 7
;BB7 8
}CC 
}DD 
internalFF 
classFF	 "
ZonedDateTimeConverterFF %
:FF& '
ValueConverterFF( 6
<FF6 7
ZonedDateTimeFF7 D
,FFD E
LocalDateTimeFFF S
>FFS T
{GG 
publicHH 
"
ZonedDateTimeConverterHH !
(HH! "
)HH" #
:HH$ %
baseII 
(II 
vII 
=>II 
vII 
.II 
WithZoneII 
(II 
DateTimeZoneII (
.II( )
UtcII) ,
)II, -
.II- .
LocalDateTimeII. ;
,II; <
vII= >
=>II? A
vIIB C
.IIC D
InUtcIID I
(III J
)IIJ K
)IIK L
{JJ 
}KK 
}LL ð
bD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\MessageBus\RabbitMqClient.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '

MessageBus' 1
;1 2
public 
class 
RabbitMqClient 
: 
IMessageBusClient /
{		 
private

 
readonly

 
IConnection

  
_connection

! ,
;

, -
public 

RabbitMqClient 
( 
ProducerConnection ,
producerConnection- ?
)? @
{ 
_connection 
= 
producerConnection (
.( )

Connection) 3
;3 4
} 
public 

void 
Publish 
( 
object 
message &
,& '
string( .

routingKey/ 9
,9 :
string; A
exchangeB J
)J K
{ 
var 
channel 
= 
_connection !
.! "
CreateModel" -
(- .
). /
;/ 0!
JsonSerializerOptions 
settings &
=' (
new) ,
(, -"
JsonSerializerDefaults- C
.C D
WebD G
)G H
{ 	
WriteIndented 
= 
false !
,! ""
DefaultIgnoreCondition "
=# $
JsonIgnoreCondition% 8
.8 9
WhenWritingNull9 H
,H I 
PropertyNamingPolicy  
=! "
JsonNamingPolicy# 3
.3 4
	CamelCase4 =
,= >
} 	
;	 

var 
payload 
= 
JsonSerializer $
.$ %
	Serialize% .
(. /
message/ 6
,6 7
settings8 @
)@ A
;A B
var 
body 
= 
Encoding 
. 
UTF8  
.  !
GetBytes! )
() *
payload* 1
)1 2
;2 3
channel 
. 
ExchangeDeclare 
(  
exchange  (
,( )
$str* 1
,1 2
true3 7
)7 8
;8 9
channel!! 
.!! 
BasicPublish!! 
(!! 
exchange!! %
,!!% &

routingKey!!' 1
,!!1 2
null!!3 7
,!!7 8
body!!9 =
)!!= >
;!!> ?
}"" 
}## ÿ
fD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\MessageBus\ProducerConnection.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '

MessageBus' 1
;1 2
public 
class 
ProducerConnection 
{ 
public 

IConnection 

Connection !
{" #
get$ '
;' (
private) 0
set1 4
;4 5
}6 7
public		 

ProducerConnection		 
(		 
IConnection		 )

connection		* 4
)		4 5
{

 

Connection 
= 

connection 
;  
} 
} Ë
eD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\MessageBus\IMessageBusClient.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '

MessageBus' 1
;1 2
public 
	interface 
IMessageBusClient "
{ 
void 
Publish	 
( 
object 
message 
,  
string! '

routingKey( 2
,2 3
string4 :
exchange; C
)C D
;D E
} ¥	
\D:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Extensions\RabbitMq.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '

Extensions' 1
;1 2
public 
class 
RabbitMq 
{ 
public 

string 
Host 
{ 
get 
; 
set !
;! "
}# $
=% &
string' -
.- .
Empty. 3
;3 4
public 

int 
Port 
{ 
get 
; 
set 
; 
}  !
public 

string 
Username 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 

string 
Password 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
}		 
gD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Configuration\MessageBusConfig.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Configuration' 4
;4 5
public		 
static		 
class		 
MessageBusConfig		 $
{

 
public 

static 
IServiceCollection $
AddMessageBus% 2
(2 3
this3 7
IServiceCollection8 J
servicesK S
,S T
IConfigurationU c
configurationd q
)q r
{ 
var 
connectionFactory 
= 
new  #
ConnectionFactory$ 5
(5 6
)6 7
;7 8
var 
rabbitMqSection 
= 
configuration +
.+ ,

GetSection, 6
(6 7
$str7 A
)A B
;B C
services 
. 
	Configure 
< 
RabbitMq #
># $
($ %
rabbitMqSection% 4
)4 5
;5 6
var 
rabbitMq 
= 
rabbitMqSection &
.& '
Get' *
<* +
RabbitMq+ 3
>3 4
(4 5
)5 6
;6 7
if 

( 
rabbitMq 
== 
null 
) 
{ 	
throw 
new !
ArgumentNullException +
(+ ,
$str, O
)O P
;P Q
} 	
connectionFactory 
. 
HostName "
=# $
rabbitMq% -
.- .
Host. 2
;2 3
connectionFactory 
. 
Port 
=  
rabbitMq! )
.) *
Port* .
;. /
connectionFactory 
. 
UserName "
=# $
rabbitMq% -
.- .
Username. 6
;6 7
connectionFactory 
. 
Password "
=# $
rabbitMq% -
.- .
Password. 6
;6 7
var 

connection 
= 
connectionFactory *
.* +
CreateConnection+ ;
(; <
$str< P
)P Q
;Q R
services 
. 
AddSingleton 
( 
new !
ProducerConnection" 4
(4 5

connection5 ?
)? @
)@ A
;A B
services   
.   
AddSingleton   
<   
IMessageBusClient   /
,  / 0
RabbitMqClient  1 ?
>  ? @
(  @ A
)  A B
;  B C
return"" 
services"" 
;"" 
}## 
}$$ õ
pD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Configuration\DependencyInjectionConfig.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Configuration' 4
;4 5
public 
static 
class %
DependencyInjectionConfig -
{		 
public

 

static

 
IServiceCollection

 $
ResolveDependencies

% 8
(

8 9
this

9 =
IServiceCollection

> P
services

Q Y
)

Y Z
{ 
services 
. 
	AddScoped 
< 
EstoqueDbContext +
>+ ,
(, -
)- .
;. /
services 
. 
	AddScoped 
< 
ICategoryRepository .
,. /
CategoryRepository0 B
>B C
(C D
)D E
;E F
services 
. 
	AddScoped 
< 
ICompanyRepository -
,- .
CompanyRepository/ @
>@ A
(A B
)B C
;C D
services 
. 
	AddScoped 
< 
ICustomerRepository .
,. /
CustomerRepository0 B
>B C
(C D
)D E
;E F
services 
. 
	AddScoped 
<  
IInventoryRepository /
,/ 0
InventoryRepository1 D
>D E
(E F
)F G
;G H
services 
. 
	AddScoped 
< 
IProductRepository -
,- .
ProductRepository/ @
>@ A
(A B
)B C
;C D
services 
. 
	AddScoped 
< "
ISaleProductRepository 1
,1 2!
SaleProductRepository3 H
>H I
(I J
)J K
;K L
services 
. 
	AddScoped 
< 
ISaleRepository *
,* +
SaleRepository, :
>: ;
(; <
)< =
;= >
services 
. 
	AddScoped 
< 
ITaxRepository )
,) *
TaxRepository+ 8
>8 9
(9 :
): ;
;; <
return 
services 
; 
} 
} 
fD:\TI\git\v2\e-Estoque-API\e-Estoque-API\e-Estoque-API.Infrastructure\Configuration\DbContextConfig.cs
	namespace 	
e_Estoque_API
 
. 
Infrastructure &
.& '
Configuration' 4
;4 5
public 
static 
class 
DbContextConfig #
{		 
public

 

static

 
IServiceCollection

 $
AddDbContextConfig

% 7
(

7 8
this

8 <
IServiceCollection

= O
services

P X
,

X Y
IConfiguration 
configuration #
)# $
{ 
services 
. 
AddDbContext 
< 
EstoqueDbContext .
>. /
(/ 0
options0 7
=>8 :
{ 	
options 
. 
	UseNpgsql 
( 
configuration +
.+ ,
GetConnectionString, ?
(? @
$str@ S
)S T
)T U
;U V
} 	
)	 

;
 
services 
. 
AddHealthChecks  
(  !
)! "
. 
AddDbContextCheck 
< 
EstoqueDbContext /
>/ 0
(0 1
)1 2
;2 3
return 
services 
; 
} 
} 